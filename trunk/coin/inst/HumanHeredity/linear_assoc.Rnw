\documentclass{article}

%% almost as usual
\author{Ludwig A. Hothorn$^1$ and Torsten Hothorn$^2$\\
$^1$Institute of Biostatistics, Leibniz University of Hannover \\
Herrenh{\"a}user Stra{\ss}e 2, D--30419 Hannover, Germany\\
$^2$Institute for Medical Informatics, Biometry and Epidemiology\\
Friedrich--Alexander--Universit\"at Erlangen--N\"urnberg \\
Erlangen, Germany}

\title{Order-restricted scores test for the evaluation of population-based 
       case-control studies when the genetic model is unknown}
\usepackage{Sweave}
\usepackage[round]{natbib}

\usepackage{verbatim}
\usepackage{graphicx}
\usepackage{amsfonts}
\usepackage{amstext}
\usepackage{amsmath}
%%\usepackage{amsthm}
%%\usepackage[round]{natbib}
%%\usepackage{bibentry}
%%\usepackage{hyperref}
\usepackage{thumbpdf}
\usepackage{rotating}
%%\usepackage{floatflt}

\newcommand{\R}{\mathbb{R} }
\newcommand{\Prob}{\mathbb{P} }
\newcommand{\N}{\mathbb{N} }
\newcommand{\C}{\mathbb{C} }
\newcommand{\V}{\mathbb{V}} %% cal{\mbox{\textnormal{Var}}} }
\newcommand{\E}{\mathbb{E}} %%mathcal{\mbox{\textnormal{E}}} }
\newcommand{\Var}{\mathbb{V}} %%mathcal{\mbox{\textnormal{Var}}} }
\newcommand{\argmin}{\operatorname{argmin}\displaylimits}
\newcommand{\argmax}{\operatorname{argmax}\displaylimits}
\newcommand{\LS}{\mathcal{L}_n}
\newcommand{\TS}{\mathcal{T}_n}
\newcommand{\LSc}{\mathcal{L}_{\text{comb},n}}
\newcommand{\LSbc}{\mathcal{L}^*_{\text{comb},n}}
\newcommand{\F}{\mathcal{F}}
\newcommand{\A}{\mathcal{A}}
\newcommand{\yn}{y_{\text{new}}}
\newcommand{\z}{\mathbf{z}}
\newcommand{\X}{\mathbf{X}}
\newcommand{\Y}{\mathbf{Y}}
\newcommand{\sX}{\mathcal{X}}
\newcommand{\sY}{\mathcal{Y}}
\newcommand{\T}{\mathbf{T}}
\newcommand{\x}{\mathbf{x}}
\renewcommand{\a}{\mathbf{a}}
\newcommand{\xn}{\mathbf{x}_{\text{new}}}
\newcommand{\y}{\mathbf{y}}
\newcommand{\w}{\mathbf{w}}
\newcommand{\ws}{\mathbf{w}_\cdot}
\renewcommand{\t}{\mathbf{t}}
\newcommand{\M}{\mathbf{M}}
\renewcommand{\vec}{\text{vec}}
\newcommand{\B}{\mathbf{B}}
\newcommand{\K}{\mathbf{K}}
\newcommand{\W}{\mathbf{W}}
\newcommand{\D}{\mathbf{D}}
\newcommand{\I}{\mathbf{I}}
\newcommand{\bS}{\mathbf{S}}
\newcommand{\cellx}{\pi_n[\x]}
\newcommand{\partn}{\pi_n(\mathcal{L}_n)}
\newcommand{\err}{\text{Err}}
\newcommand{\ea}{\widehat{\text{Err}}^{(a)}}
\newcommand{\ecv}{\widehat{\text{Err}}^{(cv1)}}
\newcommand{\ecvten}{\widehat{\text{Err}}^{(cv10)}}
\newcommand{\eone}{\widehat{\text{Err}}^{(1)}}
\newcommand{\eplus}{\widehat{\text{Err}}^{(.632+)}}
\newcommand{\eoob}{\widehat{\text{Err}}^{(oob)}}

\hyphenation{Qua-dra-tic}

\newcommand{\Rpackage}[1]{{\normalfont\fontseries{b}\selectfont #1}}
\newcommand{\Robject}[1]{\texttt{#1}}
\newcommand{\Rclass}[1]{\textit{#1}}
\newcommand{\Rcmd}[1]{\texttt{#1}}
\newcommand{\Roperator}[1]{\texttt{#1}}
\newcommand{\Rarg}[1]{\texttt{#1}}
\newcommand{\Rlevel}[1]{\texttt{#1}}

\newcommand{\RR}{\textsf{R}}
\renewcommand{\S}{\textsf{S}}

\SweaveOpts{eps=FALSE,keep.source=TRUE,echo=FALSE}

%% end of declarations %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

<<coin-setup, echo = FALSE, results = hide>>=
library("coin")
set.seed(290875)
xtable.table <- function(x, ...) {

  tab2 <- function(x, pre = NULL, totals = TRUE) {
      if (totals) {
          x <- cbind(x, Total = rowSums(x))
          x <- rbind(x, Total = colSums(x))
      }
      if (!is.null(pre)) cat(pre, " & ")
      cat(" & ", paste(colnames(x), collapse = " & "), "\\\\ \\hline \n")
      tmp <- sapply(1:nrow(x), function(i) {
          if (!is.null(pre)) cat(" & ")
          cat(rownames(x)[i], " & ", paste(x[i,], collapse = " & "),
              " \\\\ \n")
      })
  }
  if (length(dim(x)) == 2) {
      tab2(x, ...)
  } else {   
      for (i in 1:dim(x)[3])
          tab2(x[,,i], pre = dimnames(x)[[3]][i], ...)
  }
}            

### psoriasis data
`psoriasis` <-
structure(list(gender = structure(as.integer(c(2, 2, 2, 2, 2, 
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 
2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 
1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 
1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 
1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 
2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 
2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 
1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 
2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 
1, 2, 1, 2)), .Label = c("Male", "Female"), class = "factor"), 
    group = structure(as.integer(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3)), .Label = c("Control", 
    "Early Onset", "Late Onset"), class = "factor"), TNFA_238 = structure(as.integer(c(2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 
    1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 
    1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 3, 
    1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 
    2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 1, 
    1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 
    1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 
    1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 
    2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 2, 1, 2, 1)), .Label = c("GG", "GA", "AA"), class = "factor"), 
    IL1B_511 = structure(as.integer(c(2, 1, 2, 2, 1, 2, 2, 2, 
    1, 3, 2, 3, 2, 2, 1, 2, 3, 1, 2, 2, 2, 2, 3, 2, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 1, 2, 
    2, 1, 1, 2, 2, 1, 1, 2, 1, 3, 2, 2, 1, 2, 1, 1, 1, 1, 1, 
    2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 3, 2, 1, 1, 2, 2, 2, 2, 2, 
    1, 2, 1, 1, 2, 3, 1, 1, 2, 2, 2, 1, 3, 3, 2, 2, 3, 1, 3, 
    1, 1, 1, 3, 2, 2, 1, 2, 2, 1, 2, 3, 2, 2, 1, 3, 2, 3, 1, 
    2, 2, 1, 1, 2, 1, 1, 2, 1, 3, 2, 3, 2, 1, 1, 1, 1, 2, 1, 
    1, 1, 1, 1, 3, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 
    1, 2, 2, 1, 1, 1, 3, 2, 3, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 
    3, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 
    1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 
    2, 2, 1, 2, 2, 2, 2, 1, 1, 3, 2, 1, 1, 2, 2, 1, 3, 2, 2, 
    2, 1, 3, 2, 1, 2, 3, 2, 2, 2, 1, 2, 2, 2, 2, 1, 3, 1, 1, 
    1, 1, 1, 2, 2, 1, 2, 1, 3, 2, 2, 2, 1, 3, 1, 2, 1, 1, 1, 
    1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 
    3, 2, 2, 2, 2, 2, 3, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 
    2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 
    2, 1, 1, 2, 3, 3, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 3, 2, 
    3, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 
    2, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1, 2, 
    1, 1, 1, 2, 2, 1, 1, 3, 2, 2, 1, 1, 3, 1, 1, 1, 1, 1, 1, 
    2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 3, 2, 2, 3, 2, 2, 
    1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 3, 2, 1, 1, 1, 1, 2, 2, 2, 
    2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 3, 3, 1, 
    2, 2, 1, 1, 2, 1, 3, 1, 1, 2, 1, 2, 2, 2, 1, 3, 1, 1, 1, 
    2, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 3, 1, 2, 1, 2, 
    1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 3, 1, 1, 2, 1, 1, 1, 1, 
    1, 1, 1, 2, 2, 2, 3, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 3, 1, 
    1, 1, 3, 1, 1, 1, 1, 1, 3, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 
    1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1, 1, 3, 1, 2, 2, 1)), .Label = c("CC", 
    "CT", "TT"), class = "factor")), .Names = c("gender", "group", 
"TNFA_238", "IL1B_511"), row.names = c("1", "2", "3", "4", "5", 
"6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", 
"17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", 
"28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", 
"39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", 
"50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", 
"61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", 
"72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", 
"83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", 
"94", "95", "96", "97", "98", "99", "100", "101", "102", "103", 
"104", "105", "106", "107", "108", "109", "110", "111", "112", 
"113", "114", "115", "116", "117", "118", "119", "120", "121", 
"122", "123", "124", "125", "126", "127", "128", "129", "130", 
"131", "132", "133", "134", "135", "136", "137", "138", "139", 
"140", "141", "142", "143", "144", "145", "146", "147", "148", 
"149", "150", "151", "152", "153", "154", "155", "156", "157", 
"158", "159", "160", "161", "162", "163", "164", "165", "166", 
"167", "168", "169", "170", "171", "172", "173", "174", "175", 
"176", "177", "178", "179", "180", "181", "182", "183", "184", 
"185", "186", "187", "188", "189", "190", "191", "192", "193", 
"194", "195", "196", "197", "198", "199", "200", "201", "202", 
"203", "204", "205", "206", "207", "208", "209", "210", "211", 
"212", "213", "214", "215", "216", "217", "218", "219", "220", 
"221", "222", "223", "224", "225", "226", "227", "228", "229", 
"230", "231", "232", "233", "234", "235", "236", "237", "238", 
"239", "240", "241", "242", "243", "244", "245", "246", "247", 
"248", "249", "250", "251", "252", "253", "254", "255", "256", 
"257", "258", "259", "260", "261", "262", "263", "264", "265", 
"266", "267", "268", "269", "270", "271", "272", "273", "274", 
"275", "276", "277", "278", "279", "280", "281", "282", "283", 
"284", "285", "286", "287", "288", "289", "290", "291", "292", 
"293", "294", "295", "296", "297", "298", "299", "300", "301", 
"302", "303", "304", "305", "306", "307", "308", "309", "310", 
"311", "312", "313", "314", "315", "316", "317", "318", "319", 
"320", "321", "322", "323", "324", "325", "326", "327", "328", 
"329", "330", "331", "332", "333", "334", "335", "336", "337", 
"338", "339", "340", "341", "342", "343", "344", "345", "346", 
"347", "348", "349", "350", "351", "352", "353", "354", "355", 
"356", "357", "358", "359", "360", "361", "362", "363", "364", 
"365", "366", "367", "368", "369", "370", "371", "372", "373", 
"374", "375", "376", "377", "378", "379", "380", "381", "382", 
"383", "384", "385", "386", "387", "388", "389", "390", "391", 
"392", "393", "394", "395", "396", "397", "398", "399", "400", 
"401", "402", "403", "404", "405", "406", "407", "408", "409", 
"410", "411", "412", "413", "414", "415", "416", "417", "418", 
"419", "420", "421", "422", "423", "424", "425", "426", "427", 
"428", "429", "430", "431", "432", "433", "434", "435", "436", 
"437", "438", "439", "440", "441", "442", "443", "444", "445", 
"446", "447", "448", "449", "450", "451", "452", "453", "454", 
"455", "456", "457", "458", "459", "460", "461", "462", "463", 
"464", "465", "466", "467", "468", "469", "470", "471", "472", 
"473", "474", "475", "476", "477", "478", "479", "480", "481", 
"482", "483", "484", "485", "486", "487", "488", "489", "490", 
"491", "492", "493", "494", "495", "496", "497", "498", "499", 
"500", "501", "502", "503", "504", "505", "506", "507", "508", 
"509", "510", "511", "512", "513", "514", "515", "516", "517", 
"518", "519", "520", "521", "522", "523", "524", "525", "526", 
"527", "528", "529", "530", "531", "532", "533", "534", "535", 
"536", "537", "538", "539", "540", "541", "542", "543", "544", 
"545", "546", "547", "548", "549", "550", "551", "552", "553", 
"554", "555", "556", "557", "558", "559", "560", "561", "562", 
"563", "564", "565", "566", "567", "568", "569", "570", "571", 
"572", "573", "574", "575", "576"), class = "data.frame")

@

\begin{document}

\maketitle

\paragraph{Key Words:}
Candidate gene association, Cochran-Armitage trend test, Maximum test, Asymptotical distribution, 
Conditional inference.


\begin{abstract}
	The linear trend test for proportions according to Cochran-Armitage is commonly used for genotype-based analysis of candidate gene association. Depending on the underlying genetic model, the use of model-specific scores maximizes the power. Commonly, the underlying genetic model is a priori unknown. Maximum tests using standardized Cochran-Armitage tests with the specified scores were proposed. We re-formulate the problem into a maximum test of scores-specific linear-by-linear association tests. For both maximum-type and quadratic form of test statistics the asymptotic expectation and covariance can be derived in a closed form. 
	The maximum-type test for three scores, sensitve for the additive, dominant and recessive model, is three-variate normal distributed.	A simple software using the R-package coin is presented.
	   
\end{abstract}


\section{Objectives}

In population-based case-control studies the association between a candidate allele 
and a disease can be evaluated by the Cochran-Armitage (CA) trend test \citep{Armitage:1955} 
whether or not Hardy-Weinberg equilibrium holds according to \cite{Sasieni:1997}. 
The CA test is based on a set of scores assigned to the alleles. For genotypes
$(aa, Aa, AA)$, with $A$ denoting a high risk candidate allele and $a$ any of the
other alleles; the different scores are optimal for the additive, recessive and dominant
model. Thus, if the underlying mode of inheritance is known, the choice of
the test is obvious. In situations when the underlying genetic model is unknown,
\cite{Freidlin:2002} showed that choosing the wrong test, i.e., the wrong scores, 
leads to a substancial loss of power. Consequently, inference procedures
with good power under all three genetic models are of special interest.
An intuitive idea is to use the maximum of the standardized test statistics
of the CA tests which are optimal of the additive, recessive and dominant
model. This test was proposed and investigated by \cite{Freidlin:2002}. 
The authors derived the distribution under the null hypothesis by 
simulation because the asymptotic distribution of the so-called MAX 
test is not known.

In this paper, we show that the MAX test as suggested by \cite{Freidlin:2002} 
can be viewed as a special case of a more general conditional independence test according to
\citep{StrasserWeber1999}. The asymptotic distribution of the
MAX test is derived and it is shown how the MAX test can be performed
without additional programming using existing software solutions. 
Extentions to stratified designs, $3 \times k$ tables and multiple loci will be derived.

\section{Methods}

\subsection{Maximum Test}

For case-control studies on candidate gene association the data are typically given by the empirical 
genotype distribution in both groups.
For a simple bi-allelic marker the data can be presented in a $3 \times 2$ contingency table, where $A$ is the high risk candidate allele and $a$ is any of the other alleles (see Table~\ref{gdistr}). 

\begin{table}
\centering
\caption{Genotype distribution. \label{gdistr}}
  \begin{tabular}{l l l l}
    \hline
       & Cases & Controls & Total \\
 \hline
 $aa$		& 		$r_{aa}$ & $s_{aa}$	& $n_{aa}$\\
 $aA$		& 		$r_{aA}$ & $s_{aA}$	& $n_{aA}$ \\
 $AA$		& 		$r_{AA}$ & $s_{AA}$	& $n_{AA}$ \\
 Total& 		$R$ 	& $S$		& $N$  \\
  \hline
 \end{tabular}
 \end{table}


In case-control studies we are interested in comparing the
genotype distributions of cases and controls, i.e., 
probabilities $p_j = P(\text{case has genotype } j)$ and
$q_j = P(\text{control has genotype } j)$ for $j \in \{aa, aA, AA\}$.
We are especially interested in ordered alternatives, i.e., a test problem
\begin{eqnarray*}
H_0: p_j = q_j \text{ vs. } H_1: p_j < q_j \quad \text{for } j \in \{aa, aA, AA\}.
\end{eqnarray*}

The CA test statistic with scores $\mathbb{\xi} = (\xi_{aa}, \xi_{aA}, \xi_{AA})$ 
basically (modulo standardization) reads
\begin{eqnarray} \label{CAstat}
\text{CA}_{\mathbb{\xi}} = \sum_{j \in \{aa, aA, AA\}} \xi_j r_j.
\end{eqnarray}
For the dominant model the scores $\mathbb{\xi}_\text{dom}=(0,1,1)$, 
for the additive model the scores  $\mathbb{\xi}_\text{add}=(0,1,2)$ and for the recessive model the 
scores $\mathbb{\xi}_\text{rec}=(0,0,1)$ are power optimal \citep{Sasieni:1997,Slager:2001}. 
However, a priori the underlying genetic model is rarely known. Therefore, \cite{Freidlin:2002} 
proposed the maximum of three standardized CA tests (called MAX test), each with 
model-specific scores, as a global test for association. Alternatively, the optimal $\eta$ can be identified 
in $\mathbb{\xi}_\text{dom}^\text{mod}=(0,\eta,1)$ according to \cite{Zheng:2003}. 

In the following, we embed the MAX test into a more general framework for conditional inference,
derive its asymptotic distribution and give an example how to practically
perform such an analysis.

\subsubsection{Reformulation of the problem}
Let $\Y_i$ denote the both groups (cases and controls) and $\X_i$ the genotype
for all cells $i = 1, \dots, n = 6$. The weights $w_i$ represent the number of observations in each cell.
The so-called \textit{influence function} $h$ provides us with a zero-one dummy coding of the groups (being one for
cases and zero for controls).
Moreover, three transformations $g$ of the genotype are under test: $g_\text{dom}$ 
assigns scores $\xi_\text{dom}$ to
genotypes $(aa, Aa, AA)$, $g_\text{add}$ assigns scores $\xi_\text{add}$ and $g_\text{rec}$
implements scores $\xi_\text{rec}$. See Table~\ref{gd}.

\begin{table}
\begin{center}
\begin{tabular}{lllc|cccc}
$i$ & $\Y_i$  &  $\X_i$  & $w_i$ & $h(\Y_i)$ & $g_\text{add}(\X_i)$ & $g_\text{dom}(\X_i)$ & $g_\text{rec}(\X_i)$ \\ \hline
1 & Case & $aa$ & $r_{aa}$ & 1 & 0 & 0 & 0 \\
2 & Case & $Aa$ & $r_{aA}$ & 1 & 1 & 1 & 0 \\
3 & Case & $AA$ & $r_{AA}$ & 1 & 2 & 1 & 1 \\
4 & Control & $aa$ & $s_{aa}$ & 0 & 0 & 0 & 0 \\
5 & Control & $Aa$ & $s_{aA}$ & 0 & 1 & 1 & 0 \\
6 & Control & $AA$ & $s_{AA}$ & 0 & 2 & 1 & 1 \\
\end{tabular}
\caption{Genotype distribution reformulated. \label{gd}}
\end{center}
\end{table}

\subsubsection{Inference Problem and Linear Statistic}

We are interested in testing the null hypothesis of independence of grouping $\Y$ and genotype $\X$
\begin{eqnarray*}
H_0: D(\Y | \X) = D(\Y)
\end{eqnarray*}
against ordered alternatives. First, we define a three-dimensional
statistic $\T$, each dimension being associated with one of the 
scores $g_\text{add}$, $g_\text{dom}$, and $g_\text{rec}$.
Each statistic is basically the sum of the scores multiplied by the weights over cases only,
i.e., is equivalent to the Cochran-Armitage statistic (\ref{CAstat}):
\begin{eqnarray} \label{linstat}
\T = (\T_\text{add}, \T_\text{dom}, \T_\text{rec}) = 
\sum_{i = 1}^n w_i g(\X_i) h(\Y_i) \in \R^{3} 
\end{eqnarray}
with $g(\X_i) = 
(g_\text{add}(\X_i), g_\text{dom}(\X_i), g_\text{rec}(\X_i))$. Thus, the 
three-dimensional linear statistic $\T$ consists of the unstandardized
Cochran-Armitage statistics for the additive, dominant and recessive model.

\subsubsection{Conditional Expectation and Covariance}

The distribution of $\T$  depends on the joint
distribution of $\Y$ and $\X$, which is unknown under almost all practical
circumstances. At least under the null hypothesis one can dispose of this
dependency by fixing the genotypes and conditioning on all possible
permutations of the groups. 
This principle leads to test procedures known as \textit{permutation tests}. 
\cite{StrasserWeber1999} derived closed-form expressions for the conditional 
expectation $\mu \in \R^{pq}$ and covariance $\Sigma \in \R^{3 \times 3}$ 
of $\T$ under $H_0$ given all permutations of the groupings.

Let $N = \sum_{i = 1}^n w_i$ denote the sum of the weights (that is, the number 
of observations, see Table \ref{gdistr}).
The conditional expectation of the influence function $h$ is
\begin{eqnarray*}
\E(h) = N^{-1} \sum_i w_i h(\Y_i) \in \R
\end{eqnarray*}
with corresponding variance
\begin{eqnarray*}
\V(h) = N^{-1} \sum_i w_i \left(h(\Y_i) - \E(h)\right)^2
\end{eqnarray*}
The conditional expectation of the linear statistic $\T$ is 
\begin{eqnarray}
\mu & = & \E(\T) = \E(h) \sum_{i = 1}^n w_i g(\X_i), \nonumber \\
\Sigma & = & \V(\T) \nonumber \\
& = &
    \frac{N}{N - 1}  \V(h) \times
        \left(\sum_i w_i \left( g(\X_i) g(\X_i)^\top\right) \right)
\label{expectcovar}
\\
& - & \frac{1}{N - 1}  \V(h)  \times \left(
        \sum_i  w_i g(\X_i) \right) \left( \sum_i w_i g(\X_i)\right)^\top.
\nonumber
\end{eqnarray}
The three-dimensional expectation $\mu$ and the three diagonal elements
of the covariance matrix $\Sigma$ contain the mean and the variances
for the additive, dominant and recessive (unstandardized) Cochran-Armitage statistics
as given in (\ref{CAstat}) and (\ref{linstat}), respectively.

Note that the complete covariance structure, and thus the correlation between the elements
of the three-dimensional statistic $\T$ is known and can be computed for the data at hand.
The corresponding correlation matrix coincides with the correlations
obtained for the three CA-test statistic by \cite{Freidlin:2002}.

\subsubsection{Test Statistics}

Based on the three-dimensional statistic $\T$ and its expectation 
$\mu$ and covariance matrix $\Sigma$,
we can easily construct test statistics and derive their distribution under the conditions
described in the null hypothesis. As the number of observations $N$ tends to infinity, 
\cite{StrasserWeber1999}
proved that the limiting distribution of the three-dimensional statistic $\T$ is a three-dimensional
normal distribution with mean $\mu$ and covariance $\Sigma$. Thus, the asymptotic distribution
of a maximum-type statistic
\begin{eqnarray*}
c_\text{max}(\T, \mu, \Sigma)  = \max \left| \frac{\T - \mu}{\text{diag}(\Sigma)^{1/2}} \right|
\end{eqnarray*}
can be evaluated by computing three-dimensional normal probabilities. Alternatively, a quadratic
form 
\begin{eqnarray*}
c_\text{quad}(\T, \mu, \Sigma)  = (\T - \mu)^\top \Sigma^+ (\T - \mu)
\end{eqnarray*}
follows a $\chi^2$ distribution with two degrees of freedom. 
The quadratic form, which is a competitor for the MAX test statistic,
reveals high power for an average alternative 
while the maximum-type form for a particular genetic alternative. Therefore, we focus on the 
maximum-type statistics, particularly because information on the elementary genetic alternative 
is available by multiplicity-adjusted $p$-values. Note that, under any circumstances, the exact conditional
distribution can be approximated by conditional Monte-Carlo methods, which is especially attractive
for small sample sizes $N$ when we can't expect asymptotics to work well.


\subsection{Illustration}

In order to compare the above test and its implementation with the
results reported by \cite{Freidlin:2002}, we reanalyse a study on association
between a variant of the epidermal growth factor 
(EGF) gene and malignant melanoma according \citep[Table~\ref{mel},][]{Shahbazi:2002}.

<<melanoma-table, echo = FALSE>>=
me <- as.table(matrix(c( 6,  8, 10,
               32, 47, 20), byrow = TRUE, nrow = 2,
    dimnames = list(Group = c("In situ", "Control"),
                    Genotype = c("AA", "AG", "GG"))))
me <- t(me)
@

\begin{table}[h]
\begin{center}
\caption{Melanoma data \label{mel}}
\begin{tabular}{l l l l l} \hline
<<melanoma-tabular, echo = FALSE, results = tex>>=
xtable.table(me)
@
\hline
\end{tabular}
\end{center}
\end{table}
                
In \RR \citep{rcore2007} the data are represented as table object
<<melanoma-data, echo = TRUE>>=
me
@
We only have to implement the function $g$ assigning scores
$\xi_\text{add}$, $\xi_\text{dom}$ and $\xi_\text{rec}$ to each
observation based on its genotype, i.e., a matrix with three columns
<<melanoma-setup, echo = TRUE>>=
add <- c(0, 1, 2)
dom <- c(0, 1, 1)
rec <- c(0, 0, 1)
g <- function(x) {
    x <- unlist(x)
    cbind(add = add[x], dom = dom[x], rec = rec[x])
}
@
The function \Rcmd{independence\_test} from the \Rpackage{coin} \citep{PKG:coin}
can now be used to perform the test as described above:
<<melanoma-test, echo = TRUE>>=
it <- independence_test(me, xtrafo = g, alternative = "greater")
@
The statistic $\T$ is
<<melanoma-stat, echo = TRUE>>=
statistic(it, "linear")
@
We immediately are provided with the covariance matrix
$\Sigma$ and corresponding correlation matrix
<<melanoma-cor, echo = TRUE>>=
cov2cor(covariance(it))
@
those values coincide with the correlations between the 
three different CA-test statistics given by \cite{Freidlin:2002}.
The MAX test with test statistic $c_\text{max}$ and its 
asymptotic $p$-value is
<<melanoma-tp, echo = TRUE>>=
statistic(it)
pvalue(it)
@
which is the same $p$-value as shown in Table~8 of \cite{Freidlin:2002}.
This global $p$-value does not give any information about the
underlying genetic model. Multiplicity-adjusted $p$-values
for each of the additive, dominant and recessive tests, indicate
which model is likely (see Section~\ref{sim} in addition):
<<melanoma-adj, echo = TRUE>>=
pvalue(it, method = "single-step")
@
It seems that the recessive model descibes the mode of inheritance best
in this case.
We might want to check whether the asymptotics work well enough
in this situation. The exact conditional
$p$-value is approximated by a conditional Monte-Carlo procedure
with $49999$ random permutations of the data:
<<melanoma-resampl, echo = TRUE>>=
itp <- independence_test(me, xtrafo = g,
    distribution = approximate(B = 49999), 
    alternative = "greater")
@
The $p$-value is
<<melanoma-itpval, echo = TRUE>>=
pvalue(itp)
@
and the step-down multiplicity-adjusted $p$-values \citep{WestfallYoung1993}
can be computed via
<<melanoma-sd, echo = TRUE>>=
pvalue(itp, method = "step-down")
@
We refer to \cite{Hothorn:2006:AmStat} for more examples of linear-by-linear association tests.


\subsection{A simulation study \label{sim}}
Many different patterns of penetrances $f_i$, 
disease prevalence $p$, sample size of cases and controls 
$R$, $S$ can be investigated in a simulation study. We will 
focus on a high prevalent disease (i.e. $p=0.5$), penetrances according 
to a additive, recessive and dominant genetic model (as well as no 
association characterizing the null hypothesis) for a total sample size 
of $N=400$ divided into the balanced $R=S=200$ and several unbalanced sampling schemes. 
Unbalanced data are of interest because real data examples exist with 
seriously more controls, see e.g. the data in Table 1, 
or with seriously more cases, see e.g. the IL13 polymorphism in atopic 
dermatitis \cite{Neuhauser:2002}, Table 4. For the proposed MAX test both the global 
power $\pi_\text{global}$(the decision rate in favor of any alternative) and the 
correct model identification rates $\psi_\text{add}$,$\psi_\text{rec}$,$\psi_\text{dom}$ 
are compared with the power of the individual genetic model tests 
$\pi_\text{add}$, $\pi_\text{rec}$, $\pi_\text{dom}$ in Table~4.

\begin{table}
\centering
\caption{Type I error rate and empirical power estimates: prevalence $p=0.5$, 10000 runs}
  \begin{tabular}{l l l l| l l l |l l l}
    \hline
        Model & R & S & $\pi_{\text{global}}$ &  $\psi_{add}$ & $\psi_\text{rec}$ & $\psi_\text{dom}$ & $\pi_\text{add}$ & $\pi_\text{rec}$ & $\pi_\text{dom}$   \\
 \hline
 Null & 200 & 200 & 0.048&	0.012 &	0.017& 	0.019 			&	0.051 &	0.047 &	0.049 \\
 Dom  & 200 & 200 & 0.85 &	0.13 &	0.01 &	\textit{0.71} &	0.75 &	0.23 &	\textbf{0.91} \\
 Add  & 200 & 200 & 0.84 &	\textit{0.53} &	0.10  &	0.21 &	\textbf{0.88} &	0.71 &	0.78 \\
 Rec  & 200 & 200 & 0.86 &	0.16 &	\textit{0.69} &	0.01 & 	0.80 &	\textbf{0.91} &	0.28 \\
 Dom  & 100 & 300 & 0.72 &	0.16 &	0.01 &	\textit{0.55}&	0.63 &	0.21 & \textbf{0.80} \\
 Add  & 100 & 300 & 0.73 &	\textit{0.43} &	0.14 &	0.16 &	\textbf{0.78} &	0.60 &	0.65 \\
 Rec  & 100 & 300 & 0.77 &	0.16 &	\textit{0.60} &	0.01 &	0.67 &	\textbf{0.82} &	0.22  \\
 Dom  & 300 & 100 & 0.76 &	0.11 &	0.01 &	\textit{0.64} &	0.66 &	0.19 &	\textbf{0.82} \\
 Add  & 300 & 100 & 0.75 &	\textit{0.42} &	0.09 &	0.24 &	\textbf{0.79} &	0.59 &	0.69 \\
 Rec  & 300 & 100 & 0.75 &	0.17 &	\textit{0.55} &	0.01 &	0.69 &	\textbf{0.82 }&	0.24 \\
\hline
 \end{tabular}
 \end{table} 

 
Per definition all tests control the type I error rates. Clearly, the power is maximal for 
the individual, unadjusted tests when the genetic model is known (bold marked). But the a 
priori knowledge of the genetic model is unrealistic. For balanced samples sizes the power 
of the MAX test is independent of the underlying genetic model and non-inferior smaller 
compared with the maximum power for the known model. Additionally to the global decision 
that a significant association exists, the MAX test provide an adjusted p-value for the 
most likely genetic model. Clearly, these model identification rates are seriously smaller 
then the global power. Hereby is the identification of the additive model most difficult 
because of the both equal competitors, where the identification of the dominant or recessive 
model is easier (and equal) because only the additive model is the competitor. For unbalanced 
designs the power decreases although the total sample size remains constant.




\subsection{Generalizations}
A straightforward generalization is the consideration of $3 \times k$ tables instead of 
$3 \times 2$ tables, where sub-types of cases are compared with a control. For example, 
early and late disease onset are compared with the control investigating the association 
between psoriasis and polymorphisms of genes encoding tumor necrosis Factor-$\alpha$ and 
Interleukin-$1\beta$ see \cite{Reich:2002}, where for the IL1B-511 locus the related 
$3 \times 2$ table data are given in Table~5.

<<IL1B_511, echo = FALSE>>=
male <- matrix(c(75, 93, 14, 54, 44, 7, 29, 13, 4), nrow = 3,
    dimnames = list(genotype = c("CC", "CT", "TT"),
                    group = c("Control", "Early Onset", "Late Onset")))
female <- matrix(c(76, 69, 18, 26, 20, 5, 17, 10, 2), nrow = 3,
    dimnames = list(genotype = c("CC", "CT", "TT"),
                    group = c("Control", "Early Onset", "Late Onset")))
IL1B_511 <- array(0, dim = c(3, 3, 2),
    dimnames = list(genotype = c("CC", "CT", "TT"),
                    group = c("Control", "Early Onset", "Late Onset"),
                    gender = c("Female", "Male")))  
IL1B_511[,,"Female"] <- female
IL1B_511[,,"Male"] <- male    
IL1B_511 <- as.table(IL1B_511)
@


\begin{table}[h]
\begin{center}
\caption{Psoriasis data IL1B-511 locus. \label{pso}}
\begin{tabular}{l l l l l} \hline
<<IL1B_511-tabular, echo = FALSE, results = tex>>=
xtable.table(margin.table(IL1B_511, 1:2))
@
\hline
\end{tabular}
\end{center}
\end{table}

Using the function \Rcmd{independence\_test} we can now perform the test as described above
(control vs (early / late)):
<<IL1B_511-test, echo = TRUE>>=
il <- independence_test(margin.table(IL1B_511, 1:2), 
    xtrafo = g, scores = list(group = c(1, -1/2, -1/2)))
@
The MAX test with test statistic $c_\text{max}$ and its adjusted p-values
asymptotic $p$-value is
<<psoriasis-tp, echo = TRUE>>=
statistic(il, "standardized")
pvalue(il, method = "single-step")
@


Linear contrast
<<IL1B_511-test-cv, echo = TRUE>>=
independence_test(margin.table(IL1B_511, 1:2), 
    xtrafo = g, scores = list(group = 1:3))
@


A further generalization is the consideration of $3 \times k$ 
tables with strata where in the psoriasis study \cite{Reich:2002} gender or 
family history were used as strata, see for the IL1B-511 locus the related  
gender-stratified $3 \times 2$ table data given in Table 6.

\begin{table}[h]
\begin{center}
\caption{Gender-specific psoriasis data IL1B-511 locus. \label{pso}}
\begin{tabular}{l l l l l} \hline
<<psoriasis-tabular, echo = FALSE, results = tex>>=
xtable.table(IL1B_511, totals = FALSE)
@
\hline
\end{tabular}
\end{center}
\end{table}

Using the function \Rcmd{independence\_test} we can now perform the test as described above:
<<gender-test, echo = TRUE>>=
gt <- independence_test(IL1B_511, xtrafo = g,
  scores = list(group = c(1, -1/2, -1/2)))
@

The MAX test with test statistic $c_\text{max}$ and its adjusted p-values
asymptotic $p$-value is
<<gender-tp, echo = TRUE>>=
statistic(gt, "standardized")
pvalue(gt, method = "single-step")
@

A interesting generalization is the consideration of $3 \times k$ tables with 
multiple loci. Although  in the psoriasis study \cite{Reich:2002} five loci were used, 
a Bonferroni-type multiplicity-adjusted analysis was performed for the two 
relevant loci TNFA-238 and IL1B-511.

\marginpar{dom vs. rec}

<<ps, echo = TRUE>>=
grd <- function(x) {
    x <- unlist(x)  
    cbind(dom = dom[x], rec = rec[x])
}
it <- independence_test(TNFA_238 + IL1B_511 ~ group | gender, data = psoriasis,
                  ytrafo = function(data) trafo(data, factor_trafo = grd),
                  scores = list(group = c(1, -1/2, -1/2)), alter = "tw") 
statistic(it, "stand")
pvalue(it, method = "single-step")
@

\section{Conclusions}
We embed the MAX test proposed by Freidlin et al.  into a conditional inference framework leading
to a permutation test for association of a bi-allelic marker with a disease in population-based case-control studies.
The joint conditional asymptotic distribution of the three underlying linear association tests is known and can be used
to approximate the distribution of the MAX statistic.
Not only a global p-value can be computed but also  the multiplicity-adjusted p-value for aech individual model.
For small sample sizes, a better approximation of the p values can be derived from Monte Carlo experiments.
When the mode of inherence is unknown, still remarkable correct model selection rates can be achieved.
Based on a general framework for conditional inference we extend the MAX test to stratified designs, $3 \times k$ tables as well as multiple endpoints, i.e. multiple loci. Correlation between loci and corresponding association tests are taken into account leading to more powerful multiple test procedure. The proposed procedures ar easily applicable
using the computational tool provided by the R add-on package coin as illustrated in the appendix. 
 
 
\section{Appendix}
Acknowledgement: Andreas Ziegler and Inke Koenig for providing us the raw data of example xxx

\bibliographystyle{plainnat}
\bibliography{references}

\end{document}
