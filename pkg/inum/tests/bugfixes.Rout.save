
R version 4.0.5 (2021-03-31) -- "Shake and Throw"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("inum")
> set.seed(29)
> 
> ### there was a warning; reported by Fabian Scheipl
> x <- 1:2 + .1
> inum(data.frame(x = x))
$x
[1] 1.1 2.1
Levels: 1.1 2.1

attr(,"class")
[1] "inum"
> 
> 
> ### by Susanne Dandl
> sepallen <- iris[, "Sepal.Length", drop = FALSE]
> sepallen$Sepal.Length[c(1, 10)] <- NA
> 
> a <- inum(sepallen, nmax = 5, as.interval = "Sepal.Length")
> b <- inum(sepallen, nmax = 5, total = TRUE)
> c <- inum(sepallen, nmax = 5, total = TRUE, complete.cases.only = TRUE)
> all.equal(length(a), length(b), length(c))
[1] TRUE
> 
> cbind(sepallen, a, as.numeric(b), as.numeric(c))
    Sepal.Length Sepal.Length as.numeric(b) as.numeric(c)
1             NA         <NA>             1             0
2            4.9     (3.84,5]             2             1
3            4.7     (3.84,5]             2             1
4            4.6     (3.84,5]             2             1
5            5.0     (3.84,5]             2             1
6            5.4      (5,5.6]             3             2
7            4.6     (3.84,5]             2             1
8            5.0     (3.84,5]             2             1
9            4.4     (3.84,5]             2             1
10            NA         <NA>             1             0
11           5.4      (5,5.6]             3             2
12           4.8     (3.84,5]             2             1
13           4.8     (3.84,5]             2             1
14           4.3     (3.84,5]             2             1
15           5.8    (5.6,6.1]             4             3
16           5.7    (5.6,6.1]             4             3
17           5.4      (5,5.6]             3             2
18           5.1      (5,5.6]             3             2
19           5.7    (5.6,6.1]             4             3
20           5.1      (5,5.6]             3             2
21           5.4      (5,5.6]             3             2
22           5.1      (5,5.6]             3             2
23           4.6     (3.84,5]             2             1
24           5.1      (5,5.6]             3             2
25           4.8     (3.84,5]             2             1
26           5.0     (3.84,5]             2             1
27           5.0     (3.84,5]             2             1
28           5.2      (5,5.6]             3             2
29           5.2      (5,5.6]             3             2
30           4.7     (3.84,5]             2             1
31           4.8     (3.84,5]             2             1
32           5.4      (5,5.6]             3             2
33           5.2      (5,5.6]             3             2
34           5.5      (5,5.6]             3             2
35           4.9     (3.84,5]             2             1
36           5.0     (3.84,5]             2             1
37           5.5      (5,5.6]             3             2
38           4.9     (3.84,5]             2             1
39           4.4     (3.84,5]             2             1
40           5.1      (5,5.6]             3             2
41           5.0     (3.84,5]             2             1
42           4.5     (3.84,5]             2             1
43           4.4     (3.84,5]             2             1
44           5.0     (3.84,5]             2             1
45           5.1      (5,5.6]             3             2
46           4.8     (3.84,5]             2             1
47           5.1      (5,5.6]             3             2
48           4.6     (3.84,5]             2             1
49           5.3      (5,5.6]             3             2
50           5.0     (3.84,5]             2             1
51           7.0   (6.56,7.9]             6             5
52           6.4   (6.1,6.56]             5             4
53           6.9   (6.56,7.9]             6             5
54           5.5      (5,5.6]             3             2
55           6.5   (6.1,6.56]             5             4
56           5.7    (5.6,6.1]             4             3
57           6.3   (6.1,6.56]             5             4
58           4.9     (3.84,5]             2             1
59           6.6   (6.56,7.9]             6             5
60           5.2      (5,5.6]             3             2
61           5.0     (3.84,5]             2             1
62           5.9    (5.6,6.1]             4             3
63           6.0    (5.6,6.1]             4             3
64           6.1    (5.6,6.1]             4             3
65           5.6      (5,5.6]             3             2
66           6.7   (6.56,7.9]             6             5
67           5.6      (5,5.6]             3             2
68           5.8    (5.6,6.1]             4             3
69           6.2   (6.1,6.56]             5             4
70           5.6      (5,5.6]             3             2
71           5.9    (5.6,6.1]             4             3
72           6.1    (5.6,6.1]             4             3
73           6.3   (6.1,6.56]             5             4
74           6.1    (5.6,6.1]             4             3
75           6.4   (6.1,6.56]             5             4
76           6.6   (6.56,7.9]             6             5
77           6.8   (6.56,7.9]             6             5
78           6.7   (6.56,7.9]             6             5
79           6.0    (5.6,6.1]             4             3
80           5.7    (5.6,6.1]             4             3
81           5.5      (5,5.6]             3             2
82           5.5      (5,5.6]             3             2
83           5.8    (5.6,6.1]             4             3
84           6.0    (5.6,6.1]             4             3
85           5.4      (5,5.6]             3             2
86           6.0    (5.6,6.1]             4             3
87           6.7   (6.56,7.9]             6             5
88           6.3   (6.1,6.56]             5             4
89           5.6      (5,5.6]             3             2
90           5.5      (5,5.6]             3             2
91           5.5      (5,5.6]             3             2
92           6.1    (5.6,6.1]             4             3
93           5.8    (5.6,6.1]             4             3
94           5.0     (3.84,5]             2             1
95           5.6      (5,5.6]             3             2
96           5.7    (5.6,6.1]             4             3
97           5.7    (5.6,6.1]             4             3
98           6.2   (6.1,6.56]             5             4
99           5.1      (5,5.6]             3             2
100          5.7    (5.6,6.1]             4             3
101          6.3   (6.1,6.56]             5             4
102          5.8    (5.6,6.1]             4             3
103          7.1   (6.56,7.9]             6             5
104          6.3   (6.1,6.56]             5             4
105          6.5   (6.1,6.56]             5             4
106          7.6   (6.56,7.9]             6             5
107          4.9     (3.84,5]             2             1
108          7.3   (6.56,7.9]             6             5
109          6.7   (6.56,7.9]             6             5
110          7.2   (6.56,7.9]             6             5
111          6.5   (6.1,6.56]             5             4
112          6.4   (6.1,6.56]             5             4
113          6.8   (6.56,7.9]             6             5
114          5.7    (5.6,6.1]             4             3
115          5.8    (5.6,6.1]             4             3
116          6.4   (6.1,6.56]             5             4
117          6.5   (6.1,6.56]             5             4
118          7.7   (6.56,7.9]             6             5
119          7.7   (6.56,7.9]             6             5
120          6.0    (5.6,6.1]             4             3
121          6.9   (6.56,7.9]             6             5
122          5.6      (5,5.6]             3             2
123          7.7   (6.56,7.9]             6             5
124          6.3   (6.1,6.56]             5             4
125          6.7   (6.56,7.9]             6             5
126          7.2   (6.56,7.9]             6             5
127          6.2   (6.1,6.56]             5             4
128          6.1    (5.6,6.1]             4             3
129          6.4   (6.1,6.56]             5             4
130          7.2   (6.56,7.9]             6             5
131          7.4   (6.56,7.9]             6             5
132          7.9   (6.56,7.9]             6             5
133          6.4   (6.1,6.56]             5             4
134          6.3   (6.1,6.56]             5             4
135          6.1    (5.6,6.1]             4             3
136          7.7   (6.56,7.9]             6             5
137          6.3   (6.1,6.56]             5             4
138          6.4   (6.1,6.56]             5             4
139          6.0    (5.6,6.1]             4             3
140          6.9   (6.56,7.9]             6             5
141          6.7   (6.56,7.9]             6             5
142          6.9   (6.56,7.9]             6             5
143          5.8    (5.6,6.1]             4             3
144          6.8   (6.56,7.9]             6             5
145          6.7   (6.56,7.9]             6             5
146          6.7   (6.56,7.9]             6             5
147          6.3   (6.1,6.56]             5             4
148          6.5   (6.1,6.56]             5             4
149          6.2   (6.1,6.56]             5             4
150          5.9    (5.6,6.1]             4             3
> 
> stopifnot(length(attr(b, "levels")[unclass(b),"Sepal.Length"]) == 150)
> stopifnot(length(attr(c, "levels")[unclass(c),"Sepal.Length"]) == 148)
> 
> ### by Susanne Dandl
> ## mini data frame with some missings
> d <- data.frame(
+   y = rep(1:5, each = 2),
+   x = factor(rep(0:1, 5), labels = c("a", "b")),
+   z = 1:10,
+   w = 0:9/9
+ )
> d$y[c(1, 10)] <- NA
> 
> i <- inum(d, total = TRUE, complete = FALSE)
> attr(i, "levels")[i,]
    y x  z         w (weights)
1  NA a  1 0.0000000         1
2   1 b  2 0.1111111         1
3   2 a  3 0.2222222         1
4   2 b  4 0.3333333         1
5   3 a  5 0.4444444         1
6   3 b  6 0.5555556         1
7   4 a  7 0.6666667         1
8   4 b  8 0.7777778         1
9   5 a  9 0.8888889         1
10 NA b 10 1.0000000         1
> 
> i <- inum(d, total = TRUE, complete = TRUE)
> rbind(NA, attr(i, "levels"))[i + 1,]
     y    x  z         w (weights)
1   NA <NA> NA        NA        NA
2    1    b  2 0.1111111         1
3    2    a  3 0.2222222         1
4    2    b  4 0.3333333         1
5    3    a  5 0.4444444         1
6    3    b  6 0.5555556         1
7    4    a  7 0.6666667         1
8    4    b  8 0.7777778         1
9    5    a  9 0.8888889         1
1.1 NA <NA> NA        NA        NA
> 
> d <- expand.grid(y = 1:5, z = 1:10)
> d$y[c(1, nrow(d))] <- NA
> d$w <- rpois(nrow(d), lambda = 3)
> 
> i1 <- inum(d, total = TRUE, complete = FALSE)
> attr(i1, "levels")[i1,]
    y  z w (weights)
2  NA  1 1         1
13  2  1 2         1
3   3  1 1         1
14  4  1 2         1
24  5  1 3         1
4   1  2 1         1
39  2  2 5         1
40  3  2 5         1
5   4  2 1         1
15  5  2 2         1
47  1  3 7         1
16  2  3 2         1
17  3  3 2         1
25  4  3 3         1
6   5  3 1         1
41  1  4 5         1
32  2  4 4         1
18  3  4 2         1
42  4  4 5         1
19  5  4 2         1
33  1  5 4         1
26  2  5 3         1
48  3  5 7         1
49  4  5 7         1
27  5  5 3         1
20  1  6 2         1
28  2  6 3         1
43  3  6 5         1
34  4  6 4         1
7   5  6 1         1
21  1  7 2         1
8   2  7 1         1
9   3  7 1         1
35  4  7 4         1
29  5  7 3         1
10  1  8 1         1
45  2  8 6         1
22  3  8 2         1
23  4  8 2         1
11  5  8 1         1
30  1  9 3         1
1   2  9 0         1
50  3  9 7         1
36  4  9 4         1
12  5  9 1         1
44  1 10 5         1
46  2 10 6         1
38  3 10 4         1
31  4 10 3         1
37 NA 10 4         1
> 
> i2 <- inum(d, total = TRUE, complete = TRUE)
> rbind(NA, attr(i2, "levels"))[i2 + 1,]
     y  z  w (weights)
1   NA NA NA        NA
13   2  1  2         1
3    3  1  1         1
14   4  1  2         1
24   5  1  3         1
4    1  2  1         1
38   2  2  5         1
39   3  2  5         1
5    4  2  1         1
15   5  2  2         1
46   1  3  7         1
16   2  3  2         1
17   3  3  2         1
25   4  3  3         1
6    5  3  1         1
40   1  4  5         1
32   2  4  4         1
18   3  4  2         1
41   4  4  5         1
19   5  4  2         1
33   1  5  4         1
26   2  5  3         1
47   3  5  7         1
48   4  5  7         1
27   5  5  3         1
20   1  6  2         1
28   2  6  3         1
42   3  6  5         1
34   4  6  4         1
7    5  6  1         1
21   1  7  2         1
8    2  7  1         1
9    3  7  1         1
35   4  7  4         1
29   5  7  3         1
10   1  8  1         1
44   2  8  6         1
22   3  8  2         1
23   4  8  2         1
11   5  8  1         1
30   1  9  3         1
2    2  9  0         1
49   3  9  7         1
36   4  9  4         1
12   5  9  1         1
43   1 10  5         1
45   2 10  6         1
37   3 10  4         1
31   4 10  3         1
1.1 NA NA NA        NA
> 
> proc.time()
   user  system elapsed 
  0.176   0.025   0.184 
