
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("BDR")
> data("iris")
> set.seed(29)
> 
> iris[3, "Sepal.Width"] <- NA
> 
> iris1 <- BDR(iris, nmax = 5, as.interval = "Sepal.Width")
> 
> iris2 <- BDR(iris, nmax = 5, total = TRUE, as.interval = "Sepal.Width")
> 
> all.equal(x1 <- as.data.frame(iris1), x2 <- as.data.frame(iris2))
[1] "Attributes: < Component \"row.names\": Modes: numeric, character >"              
[2] "Attributes: < Component \"row.names\": target is numeric, current is character >"
> 
> table(x1$Species, iris$Species)
            
             setosa versicolor virginica
  setosa         50          0         0
  versicolor      0         50         0
  virginica       0          0        50
> 
> tapply(iris$Sepal.Width, x1$Sepal.Width, range)
$`0`
[1] NA NA

$`1`
[1] 2.0 2.7

$`2`
[1] 2.8 3.0

$`3`
[1] 3.1 3.1

$`4`
[1] 3.2 3.3

$`5`
[1] 3.4 4.4

> levels(x1$Sepal.Width)
[1] "(1.9,2.7]" "(2.7,3]"   "(3,3.1]"   "(3.1,3.4]" "(3.4,4.4]"
> 
> (w <- weights(iris2))
 [1] 1 5 3 4 4 9 1 1 1 1 2 2 1 1 2 5 1 1 2 2 1 3 4 1 2 1 1 1 4 1 2 3 8 3 2 1 1 1
[39] 2 1 2 1 1 1 1 1 1 1 1 1 1 2 3 3 1 1 2 3 1 1 1 1 1 1 1 1 2 1 3 5 2 1 4 2 3
> sum(w)
[1] 150
> 
> x <- runif(100)
> x[1:3] <- NA   
> ix <- interval(x, breaks = 0:10/10)
> 
> levels(ix)
 [1] "(0,0.1]"   "(0.1,0.2]" "(0.2,0.3]" "(0.3,0.4]" "(0.4,0.5]" "(0.5,0.6]"
 [7] "(0.6,0.7]" "(0.7,0.8]" "(0.8,0.9]" "(0.9,1]"  
> nlevels(ix)
[1] 10
> ix
  [1] <NA>      <NA>      <NA>      (0.3,0.4] (0.5,0.6] (0,0.1]   (0.8,0.9]
  [8] (0.8,0.9] (0.1,0.2] (0.2,0.3] (0.9,1]   (0.3,0.4] (0.3,0.4] (0.6,0.7]
 [15] (0.1,0.2] (0.8,0.9] (0.6,0.7] (0.3,0.4] (0.8,0.9] (0.3,0.4] (0.6,0.7]
 [22] (0.6,0.7] (0.9,1]   (0.9,1]   (0.6,0.7] (0.3,0.4] (0.4,0.5] (0.8,0.9]
 [29] (0.6,0.7] (0.1,0.2] (0.3,0.4] (0.1,0.2] (0,0.1]   (0.7,0.8] (0.4,0.5]
 [36] (0,0.1]   (0.9,1]   (0.3,0.4] (0.3,0.4] (0,0.1]   (0.6,0.7] (0,0.1]  
 [43] (0.9,1]   (0.6,0.7] (0,0.1]   (0.8,0.9] (0.9,1]   (0.7,0.8] (0.5,0.6]
 [50] (0.6,0.7] (0.4,0.5] (0.7,0.8] (0.2,0.3] (0.6,0.7] (0.5,0.6] (0.4,0.5]
 [57] (0.5,0.6] (0.8,0.9] (0.5,0.6] (0.1,0.2] (0.4,0.5] (0.1,0.2] (0.5,0.6]
 [64] (0.3,0.4] (0.5,0.6] (0.7,0.8] (0.5,0.6] (0.6,0.7] (0.4,0.5] (0.2,0.3]
 [71] (0.1,0.2] (0.8,0.9] (0.2,0.3] (0,0.1]   (0,0.1]   (0.2,0.3] (0.8,0.9]
 [78] (0,0.1]   (0,0.1]   (0.2,0.3] (0.6,0.7] (0,0.1]   (0.8,0.9] (0.3,0.4]
 [85] (0.3,0.4] (0.4,0.5] (0.9,1]   (0.7,0.8] (0,0.1]   (0.4,0.5] (0.6,0.7]
 [92] (0.4,0.5] (0.5,0.6] (0.4,0.5] (0.2,0.3] (0.1,0.2] (0.4,0.5] (0.6,0.7]
 [99] (0.7,0.8] (0.3,0.4]
10 Intervals: (0,0.1] < (0.1,0.2] < (0.2,0.3] < (0.3,0.4] < ... < (0.9,1]
>   
> table(ix)
ix
 0  1  2  3  4  5  6  7  8  9 10 
 3 12  8  7 13 11  9 14  6 10  7 
> ix[1:10]
 [1] <NA>      <NA>      <NA>      (0.3,0.4] (0.5,0.6] (0,0.1]   (0.8,0.9]
 [8] (0.8,0.9] (0.1,0.2] (0.2,0.3]
10 Intervals: (0,0.1] < (0.1,0.2] < (0.2,0.3] < (0.3,0.4] < ... < (0.9,1]
> 
> enum(gl(3, 3))
[1] 1 1 1 2 2 2 3 3 3
Levels: 1 2 3
> enum(gl(3, 3, ordered = TRUE))
[1] 1 1 1 2 2 2 3 3 3
Levels: 1 < 2 < 3
> enum(c(TRUE, FALSE))
[1] TRUE  FALSE
Levels: FALSE TRUE
> enum(c(1:3, 20L, 30L))
[1] 1  2  3  20 30
Levels: 1 2 3 20 30
> 
> x <- sample(c(1:3, 10L, 20L), 100, replace = TRUE)
> x[1:3] <- NA
> ix <- enum(x)
> levels(ix)   
[1]  1  2  3 10 20
> nlevels(ix)  
[1] 5
> ix
  [1] <NA> <NA> <NA> 1    20   20   2    10   3    1    3    2    2    20   1   
 [16] 2    10   20   3    3    2    1    20   20   2    1    3    3    1    10  
 [31] 20   20   2    3    3    1    1    3    2    2    20   1    1    10   10  
 [46] 3    1    20   2    3    1    1    1    1    1    2    2    3    1    10  
 [61] 1    20   1    20   20   2    3    10   1    1    2    3    3    20   10  
 [76] 1    10   10   3    3    3    10   3    10   1    10   2    20   20   10  
 [91] 10   10   20   1    20   20   1    1    3    20  
Levels: 1 2 3 10 20
>   
> table(ix)
ix
 0  1  2  3  4  5 
 3 26 15 20 16 20 
> 
> 
> proc.time()
   user  system elapsed 
  0.132   0.004   0.131 
