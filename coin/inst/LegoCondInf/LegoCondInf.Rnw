\documentclass{article}
\usepackage{amstext}
\usepackage{amsfonts}
\usepackage{hyperref}
\usepackage[round]{natbib}
\usepackage{hyperref}
\usepackage{graphicx}
\usepackage{rotating}
\usepackage[nolists]{endfloat}

\newcommand{\Rpackage}[1]{\textit{#1}}
\newcommand{\Robject}[1]{\texttt{#1}}
\newcommand{\Rclass}[1]{\textit{#1}}
\newcommand{\Rcmd}[1]{\texttt{#1}}
\newcommand{\Roperator}[1]{\texttt{#1}}
\newcommand{\Rarg}[1]{\texttt{#1}}
\newcommand{\Rlevel}[1]{\texttt{#1}}

\newcommand{\RR}{\textsf{R}} 
\renewcommand{\S}{\textsf{S}}

\newcommand{\R}{\mathbb{R} }
\newcommand{\Prob}{\mathbb{P} }
\newcommand{\N}{\mathbb{N} }
\newcommand{\C}{\mathbb{C} }
\newcommand{\V}{\mathbb{V}} %% cal{\mbox{\textnormal{Var}}} }
\newcommand{\E}{\mathbb{E}} %%mathcal{\mbox{\textnormal{E}}} }
\newcommand{\Var}{\mathbb{V}} %%mathcal{\mbox{\textnormal{Var}}} }
\newcommand{\argmin}{\operatorname{argmin}\displaylimits}
\newcommand{\argmax}{\operatorname{argmax}\displaylimits}
\newcommand{\LS}{\mathcal{L}_n}
\newcommand{\TS}{\mathcal{T}_n}
\newcommand{\LSc}{\mathcal{L}_{\text{comb},n}}
\newcommand{\LSbc}{\mathcal{L}^*_{\text{comb},n}}
\newcommand{\F}{\mathcal{F}}
\newcommand{\A}{\mathcal{A}}
\newcommand{\yn}{y_{\text{new}}}
\newcommand{\z}{\mathbf{z}}
\newcommand{\X}{\mathbf{X}}
\newcommand{\Y}{\mathbf{Y}}
\newcommand{\sX}{\mathcal{X}}
\newcommand{\sY}{\mathcal{Y}}
\newcommand{\T}{\mathbf{T}}
\newcommand{\x}{\mathbf{x}}
\renewcommand{\a}{\mathbf{a}}
\newcommand{\xn}{\mathbf{x}_{\text{new}}}
\newcommand{\y}{\mathbf{y}}
\newcommand{\w}{\mathbf{w}}
\newcommand{\ws}{\mathbf{w}_\cdot}
\renewcommand{\t}{\mathbf{t}}
\newcommand{\M}{\mathbf{M}}
\renewcommand{\vec}{\text{vec}}
\newcommand{\B}{\mathbf{B}}
\newcommand{\K}{\mathbf{K}}
\newcommand{\W}{\mathbf{W}}
\newcommand{\D}{\mathbf{D}}
\newcommand{\I}{\mathbf{I}}
\newcommand{\bS}{\mathbf{S}}
\newcommand{\cellx}{\pi_n[\x]}
\newcommand{\partn}{\pi_n(\mathcal{L}_n)}
\newcommand{\err}{\text{Err}}
\newcommand{\ea}{\widehat{\text{Err}}^{(a)}}
\newcommand{\ecv}{\widehat{\text{Err}}^{(cv1)}}
\newcommand{\ecvten}{\widehat{\text{Err}}^{(cv10)}}
\newcommand{\eone}{\widehat{\text{Err}}^{(1)}}
\newcommand{\eplus}{\widehat{\text{Err}}^{(.632+)}}
\newcommand{\eoob}{\widehat{\text{Err}}^{(oob)}}

\SweaveOpts{engine=R,eps=FALSE}

\begin{document}

<<setup, echo = FALSE, results = hide>>=
options(width = 65)
require("coin")
set.seed(290875)
### get rid of the NAMESPACE
load(file.path(.find.package("coin"), "R", "all.rda"))
anonymous <- FALSE
@

\hypersetup{%
  pdftitle = {A Lego System for Conditional Inference},
  pdfsubject = {Manuscript},
  pdfauthor = {Torsten Hothorn, Kurt Hornik,
               Mark A. van de Wiel and Achim Zeileis},
%% change colorlinks to false for pretty printing
  colorlinks = {true},
  linkcolor = {blue},
  citecolor = {blue},
  urlcolor = {red},
  hyperindex = {true},
  linktocpage = {true},
}

\title{A Lego System for Conditional Inference}

<<authors, echo = FALSE, results = tex>>=
if(!anonymous) {
    cat("\\author{Torsten Hothorn$^1$, Kurt Hornik$^2$, \\\\ 
            Mark A. van de Wiel$^3$ and Achim Zeileis$^2$}\n")
} else  {
    cat("\\author{Anonymous}\n")
}
@

%% \setkeys{Gin}{height=\textheight}

\date{}

\maketitle

<<affil, echo = FALSE, results = tex>>=
if(!anonymous)
    cat("\\noindent$^1$ Institut f\\\"ur Medizininformatik, Biometrie und Epidemiologie\\\\
           Friedrich-Alexander-Universit\\\"at Erlangen-N\"urnberg\\\\
           Waldstra{\\ss}e 6, D-91054 Erlangen, Germany \\\\
           \\texttt{Torsten.Hothorn@R-project.org}
         \\newline

         \\noindent$^2$ Department f\\\"ur Statistik und Mathematik,
            Wirtschaftsuniversit\\\"at Wien \\\\
            Augasse 2-6, A-1090 Wien, Austria \\\\
            \\texttt{Kurt.Hornik@R-project.org} \\\\
            \texttt{Achim.Zeileis@R-project.org}
         \\newline

         \\noindent$^3$ Department of Mathematics and Computer Science \\\\
            Eindhoven University of Technology \\\\
            HG 9.25, P.O. Box 513 \\\\
            5600 MB Eindhoven, The Netherlands \\\\
            \\texttt{markvdw@win.tue.nl}
         \\newline\n")
@

\thispagestyle{empty}

\begin{abstract}
Conditioning on the observed data is an important and flexible 
design principle for statistical test procedures. Although generally
applicable, permutation tests currently in use are limited to 
the treatment of special cases, such as contingency tables or $K$-sample
problems. A new theoretical framework for permutation
tests opens up the way to a unified and generalized view. We argue that the
transfer of such a theory to practical data analysis has important
implications in many applications and requires tools that enable the
data analyst to compute on the theoretical concepts as closely as possible.
We re-analyze data where non-standard inference procedures are
required utilizing the \Rpackage{coin} add-on package in the \RR{}
system for statistical computing and show what one can gain from going
beyond the `classical' test procedures.
\end{abstract}

\noindent
KEY WORDS: Permutation tests; Multiple testing; Independence; Software.
\newline

\noindent
\begin{verbatim}
$Date$ $Revision$
\end{verbatim}

\newpage

\section{Introduction}

The distribution of a test statistic under the circumstances of a certain
null hypothesis clearly depends on the unknown distribution of the data and
thus is unknown as well.
Two concepts are commonly applied to dispose of this dependency.
Unconditional tests impose assumptions on the distribution of the data such
that the null distribution of a test statistic can be derived analytically. In contrast, 
conditional tests
replace the unknown null distribution by the conditional null distribution,
i.e., the distribution of the test statistic given the observed data. The
latter approach is known as \textit{permutation testing} and was developed
by R. A. Fisher more than 70 years ago \citep{Fisher1935}. 
The pros and cons of both approaches in different fields of application 
have been widely discussed \citep[e.g.~by][]{why-permut:1998,pros-and-c:2000,Shuster2005}.
Here, we focus on the practical aspects of permutation testing rather than
dealing with its methodological foundations.

For the construction of permutation tests it is common exercise to `recycle'
test statistics well known from the unconditional world, such as linear rank
statistics, ANOVA $F$ statistics or $\chi^2$ statistics for
contingency tables, and to replace the unconditional null distribution with
the conditional distribution of the test statistic under the null
hypothesis \citep{Edgington1987,Good2000,Pesarin2001,Ernst2004}. 
Because the choice of the test statistic is the only `degree of freedom' for
the data analyst,
the classical view on permutation tests requires 
a `cook book' classification of inference problems (categorical data
analysis, multivariate analysis, $K$-sample location problems, correlation,
etc.), each being associated with a `natural' form of the test statistic.

The theoretical advances of the last decade \citep[notably][]{StrasserWeber1999,JanssenPauls2003}
give us a much better understanding of the strong connections between the 
`classical' permutation tests defined for different inference problems. 
As we will argue in this paper, the new
theoretical tools open up the way to a simple construction principle 
for test procedures in new and challenging inference problems.
Especially attractive for this purpose is the theoretical framework for
permutation tests developed by \cite{StrasserWeber1999}. This unifying
theory is based on a flexible form of multivariate linear statistics for the
general independence problem. 

This framework provides us with a conceptual Lego system for the construction
of permutation tests consisting of Lego bricks for linear statistics
suitable for different inference problems (contingency tables, multivariate
problems, etc.), different forms of test statistics, such as quadratic forms
for global tests or test statistics suitable for multiple comparison
procedures, and several ways to compute or approximate the conditional null
distribution. The classical procedures, such as a permutation $t$ test, are part
of this framework and, even more interestingly, new test procedures can be
embedded into the same theory whose main ideas are sketched in
Section~\ref{CI}.

Currently, the statistician's toolbox consists of rather inflexible spanners,
such as the Wilcoxon-Mann-Whitney test for comparing two distributions 
or the Cochran-Mantel-Haenszel $\chi^2$ test for independence in
contingency tables. With this work, we add an adjustable spanner to the 
statistician's toolbox which helps to address both the common as well 
as new or unusual inference problems with the appropriate 
conditional test procedures. In the main part of this paper we show how one can
construct and implement permutation tests `on the fly' by plugging together Lego bricks for
the multivariate linear statistic, the test statistic and the conditional
null distribution, both conceptually and practically by means of the 
\Rpackage{coin} add-on package 
<<coincite, echo = FALSE, results = tex>>=
if (anonymous) {
    cat("(Anonymous)")
} else {
    cat("\\citep{PKG:coin}\n")
}
@
in the \RR{} system for statistical computing
\citep{Rcore2005}.


\section{A Conceptual Lego System \label{CI}}

To fix ideas we assume that we are provided with observations
$(\Y_i, \X_i)$ for $i = 1, \dots, n$.
The variables $\Y$ and $\X$ from sample spaces $\mathcal{Y}$ and
$\mathcal{X}$ may
be measured at arbitrary scales and may be multivariate as well. 
We are interested in testing the null hypothesis of independence of $\Y$ and $\X$
\begin{eqnarray*}
H_0: D(\Y | \X) = D(\Y)
\end{eqnarray*}
against arbitrary alternatives. \cite{StrasserWeber1999} suggest to derive
\textit{scalar} test statistics for testing $H_0$ from \textit{multivariate}
linear statistics of the form 
\begin{eqnarray*}
\T = \vec\left(\sum_{i = 1}^n g(\X_i) h(\Y_i)^\top\right)
\in \R^{pq \times 1}.
\end{eqnarray*}
Here, $g: \mathcal{X} \rightarrow \R^{p \times 1}$ is a transformation of
the $\X$ measurements and $h: \mathcal{Y} \rightarrow
\R^{q \times 1}$ is called \emph{influence function}. The function $h(\Y_i)
= h(\Y_i, (\Y_1, \dots, \Y_n))$ must depend on the responses $(\Y_1, \dots, \Y_n)$ in a permutation
symmetric way. We will give specific examples how to choose $g$ and $h$
for specific inference problems in Section~\ref{play}.

The distribution of $\T$  depends on the joint distribution of $\Y$ and $\X$, 
which is unknown under almost all practical circumstances. 
At least under the null hypothesis one can dispose of this 
dependency by fixing $\X_1, \dots, \X_n$ and conditioning on all possible 
permutations $S$ of the responses $\Y_1, \dots, \Y_n$. 

The conditional expectation $\mu \in \R^{pq \times 1}$ and covariance
$\Sigma \in \R^{pq \times pq}$ of $\T$ under $H_0$ given
all permutations $\sigma \in S$ of the responses are derived by
\cite{StrasserWeber1999}:
\begin{eqnarray*}
\mu = \E(\T | S) & = & \vec \left( \left( \sum_{i = 1}^n g(\X_i) \right)
\E(h | S)^\top \right) \\
\Sigma = \V(\T | S) & = &
    \frac{n}{n - 1}  \V(h | S) \otimes
        \left(\sum_i g(\X_i) \otimes  g(\X_i)^\top \right)
\\
& - & \frac{1}{n - 1}  \V(h | S)  \otimes \left(
        \sum_i g(\X_i) \right) \otimes \left( \sum_i g(\X_i)\right)^\top
\nonumber
\end{eqnarray*}
where $\otimes$ denote the Kronecker product, and the conditional
expectation of the influence function is $\E(h | S) = n^{-1} \sum_i
h(\Y_i)$ with corresponding $q \times q$ covariance matrix
\begin{eqnarray*}
\V(h | S) = n^{-1} \sum_i \left(h(\Y_i) - \E(h | S) \right) \left(h(\Y_i) - \E(h | S)\right)^\top.
\end{eqnarray*}

The key step for the construction of test statistics based on the multivariate
linear statistic $\T$ is its standardization utilizing the 
conditional expectation $\mu$ and covariance matrix $\Sigma$. 
Univariate test statistics~$c$ mapping an observed linear
statistic $\mathbf{t} \in \R^{pq \times 1}$ 
into the real line can be of arbitrary form.  An obvious choice is
the maximum of the absolute values of the standardized linear statistic
\begin{eqnarray*}
c_\text{max}(\mathbf{t}, \mu, \Sigma)  = \max \left| \frac{\mathbf{t} -
\mu}{\text{diag}(\Sigma)^{1/2}} \right|.
\end{eqnarray*}
A prominent alternative are quadratic forms 
$c_\text{quad}(\mathbf{t}, \mu, \Sigma)  =
(\mathbf{t} - \mu) \Sigma^+ (\mathbf{t} - \mu)^\top$ involving 
the Moore-Penrose inverse $\Sigma^+$ of $\Sigma$.

%%The definition of one- and two-sided $p$-values used for the computations in
%%the \Rpackage{coin} package is
%%\begin{eqnarray*}
%%& & P(c(\T, \mu, \Sigma)\le c(\mathbf{t}, \mu, \Sigma)) \quad \text{(less)} \\  
%%& & P(c(\T, \mu, \Sigma) \ge c(\mathbf{t}, \mu, \Sigma)) \quad \text{(greater)}\\
%%& & P(|c(\T, \mu, \Sigma)| \le |c(\mathbf{t}, \mu, \Sigma)|) \quad
%%\text{(two-sided).}
%%\end{eqnarray*}
%%Note that for quadratic forms only two-sided $p$-values are available 
%%and that in the one-sided case maximum type test statistics are replaced by
%%\begin{eqnarray*}
%%\min \left( \frac{\mathbf{t} - \mu}{\text{diag}(\Sigma)^{1/2}} \right)
%%    \quad \text{(less) and } 
%%\max \left( \frac{\mathbf{t} - \mu}{\text{diag}(\Sigma)^{1/2}} \right)
%%    \quad \text{(greater).}
%%\end{eqnarray*}

The conditional distribution $\Prob(c(\T, \mu, \Sigma) \le z | S)$
is the number of permutations $\sigma \in S$ of the data 
with corresponding test statistic not exceeding $z$ divided by the total number
of permutations in $S$. For some special forms of the
multivariate linear statistic the exact distribution of some 
test statistics is trackable for small and moderate sample sizes.
%%For two-sample problems, the shift-algorithm by \cite{axact-dist:1986} 
%%and \cite{exakte-ver:1987} and the split-up algorithm by 
%%\cite{vdWiel2001} are implemented as part of the package.
Conditional Monte-Carlo procedures (`resampling') can always be used to 
approximate the exact distribution up to any desired accuracy by evaluating
the test statistic for a random sample from the set all permutations $S$.
It is important to note that the presence of a grouping of the observations
into blocks, only permutations within blocks are eligible and that the
conditional expectation and covariance matrix need to be computed
separately for each block.

Less well known is the fact that 
the conditional distribution can be approximated by the limit distribution
under all circumstances. \cite{StrasserWeber1999} proved (Theorem 2.3) that the   
conditional distribution of linear statistics $\T$ with conditional    
expectation $\mu$ and covariance $\Sigma$ tends to a multivariate normal
distribution with parameters $\mu$ and $\Sigma$ as $n \rightarrow
\infty$. Thus, the asymptotic conditional distribution of test statistics of
the form $c_\text{max}$ is normal and
can be computed directly in the univariate case ($pq = 1$). The evaluation
of multivariate normal distributions is possible by 
means of quasi-randomized Monte-Carlo procedures \citep{numerical-:1992}. For
quadratic forms
$c_\text{quad}$ which follow a $\chi^2$ distribution with degrees of freedom
given by the rank of $\Sigma$ \citep[e.g.~Theorem 6.20, ][]{Rasch1995}, exact
probabilities can be computed efficiently.

\section{Playing Lego \label{play}}

The Lego system sketched in the previous section consists of Lego bricks for 
the multivariate linear statistic $\T$, namely the transformation $g$ and
influence function $h$, multiple forms of the test statistic $c$ and several choices
of approximations of the null distribution. In this section, we will show how
classical procedures, starting with the conditional Kruskal-Wallis test and
the Cochran-Mantel-Haenszel test, can be embedded into this general theory
and, much more interesting from our point of view, how new conditional test
procedures can be constructed conceptually \textit{and} practically. 
Therefore, each inference problem goes along with \RR{} code necessary to perform the
appropriate conditional test using the \Rpackage{coin} functionality 
which enables the data analyst to benefit from this
simple methodology in every day's data analysis. All analyses are
reproducible from the \Rpackage{coin} package vignette available from
\url{http://CRAN.R-project.org}.

\paragraph{Genetic Components of Alcoholism.}

Various studies have linked alcohol dependence phenotypes to chromosome 4.  
One candidate gene is \textit{NACP} (non-amyloid component of plaques), 
coding for alpha synuclein. 
\cite{Boenscheta2005} found longer alleles of
\textit{NACP}-REP1 in alcohol-dependent patients compared with healthy controls
and report that the allele lengths show some
association with levels of expressed alpha synuclein mRNA (see
Figure~\ref{alpha-box}).

\begin{sidewaysfigure}
\begin{center}
<<alpha-data-figure, echo = FALSE, fig = TRUE>>=
"alpha" <-
structure(list(group = structure(as.integer(c(1, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 2, 1, 2, 2, 1, 2, 2, 2, 3, 2,
2, 2, 2, 2, 3, 3, 2, 2, 2, 1, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2,
2, 2, 3, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 2, 3, 2, 2, 2, 2,
2, 3, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,   
1, 2, 1, 1, 2, 2, 1, 1)), .Label = c("1", "2", "3"), class = "factor"),
    level = c(1.43, -1.9, 1.55, 3.27, 0.3, 1.9, 2.53, 2.83, 3.1,
    2.07, 1.63, 2.53, 0.1, 2.53, -2.83, 1.6, 2.27, 1.23, 0.7,   
    3.8, -1.47, -2.37, 0.67, -0.37, 3.6, 3.2, 3.05, 1.97, 3.33, 
    2.9, 1.45, 4.1, 2.77, 4.05, 2.13, 2.57, 3.53, 3.37, 3.67,    
    2.13, 1.4, 3.5, 3.53, 2.2, 3.2, 4.23, 2.87, 3.2, 3.4, 3.2,  
    4.17, 4.3, 4.23, 3.43, 4.4, 3.27, 3.07, 4.03, 3.07, 4.43,  
    1.75, 1.77, 1.33, 3.43, 1.03, 3.13, 4.17, 2.7, 3.93, 3.5, 
    3.9, 2.17, 3.13, -2.4, 1.9, 3, 5.63, 2.8, 3.17, 2, 2.93,  
    2.87, 1.83, 1.05, 1, 2.77, 1.43, 5.8, 2.8, 1.17, 1.6, 0.47,
    2.33, 0.67, 0.73, 1.47, 0.1)), .Names = c("length", "elevel" 
), row.names = c("1", "2", "3", "4", "5", "6", "7", "8", "9",  
"10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20",
"21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31",
"32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42",
"43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53",
"54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64",
"65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75",
"76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86",
"87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97" 
), class = "data.frame")
n <- table(alpha$length)
levels(alpha$length) <- c("short", "intermediate", "long")
par(cex.lab = 1.3, cex.axis = 1.3)
boxplot(elevel ~ length, data = alpha, ylab = "Expression Level",
        xlab = "NACP-REP1 Allele Length", varwidth = TRUE)
axis(3, at = 1:3, labels = paste("n = ", n))
rankif <- function(data) trafo(data, numeric_trafo = rank)
levels(alpha$length) <- c("short", "intermediate", "long")
@
\caption{\Robject{alpha} data: Distribution of levels of expressed alpha synuclein mRNA
         in three groups defined by the \textit{NACP}-REP1 allele lengths.
         \label{alpha-box}}
\end{center}
\end{sidewaysfigure}
Our first attempt to test for different levels of gene expression in the three
groups is the classical Kruskal-Wallis test. Here, the transformation 
$g$ is a dummy coding of the allele length ($g(\X_i) = (0, 1, 0)^\top$ for
intermediate length, for example) and the value of the influence function 
$h(\Y_i)$ is the rank of $\Y_i$ among the ranks of $\Y_1, \dots, \Y_n$.
Thus, the observed linear statistic $\mathbf{t}$ is the vector of rank sums in each of the 
three groups and the test statistic is a quadratic form 
$(\mathbf{t} - \mu) \Sigma^+ (\mathbf{t} - \mu)^\top$ 
utilzing the conditional expectation~$\mu$ and covariance matrix~$\Sigma$.

In order to compute the linear statistic we need to define an
influence function performing a ranking of the expression levels.
Under the null hypothesis, the $c_\text{quad}$-type Kruskal-Wallis 
test statistic tends to a $\chi^2$
distribution with two degrees of freedom (the rank of the conditional
covariance matrix $\Sigma$) from which a $p$-value can be
computed. In \RR{}, the function \Rcmd{independence\_test} takes a formula
describing the inference problem, i.e., the independence of expression
levels (\Robject{elevel}) and allele lengths (\Robject{length}), the
influence function is specified via the \Rcmd{ytrafo} argument and we ask
for a $c_\text{quad}$-type test statistic (\Rcmd{teststat}) as follows:
<<alpha-kruskal, echo = TRUE>>=
independence_test(elevel ~ length, data = alpha, ytrafo = function(data)
                  trafo(data, numeric_trafo = rank), teststat = "quadtype")
@
The results are equivalent to the results reported by \Rcmd{kruskal.test},
the `classical' interface to the Kruskal-Wallis test in \RR{}
<<alpha-kruskal, echo = TRUE>>=
kruskal.test(elevel ~ length, data = alpha)
@
However, going beyond the functionality implemented in \Rcmd{kruskal.test}
would require extensive programming but is easily possible with the
\Rpackage{coin} functionality being available. For example, 
ignoring the ordinal structure of the allele length is only
suboptimal, especially when we have an ordered alternative in mind. 
Ordinal variables can be incorporated into the general framework
via linear-by-linear association tests \citep{Agresti2002}. 
When $\X$ is measured at $K$ levels associated with a score vector 
$\gamma \in \R^{K \times 1}$, the linear statistic reads
\begin{eqnarray*}
\T_\gamma = \vec \left( \sum_{i=1}^n \gamma^\top g(\X_i)
            h(\Y_i)^\top \right).
\end{eqnarray*}
Here, the mid-points of the intervals used to categorize the allele lengths
are a possible choice for the score vector $\gamma$ and the linear-by-linear
association test can be performed by attaching the scores to the variable
\Robject{length}:
<<alpha-kruskal-ordered, echo = TRUE>>=
independence_test(elevel ~ length, data = alpha, ytrafo = function(data)
                  trafo(data, numeric_trafo = rank), 
                  scores = list(length = c(2, 7, 11)))
@
The smaller $p$-value corresponds well with Figure~\ref{alpha-box}, i.e., 
the impression that the expression levels increase with increasing 
allele lengths. 

\paragraph{Smoking and Alzheimer's Disease.}

<<alzheimer-demographics, echo = FALSE>>=
total <- sum(alzheimer)
stopifnot(total == 538)
male <- sum(alzheimer[,,"Male"])
stopifnot(male == 200)
female <- sum(alzheimer[,,"Female"])
stopifnot(female == 338)
disease <- colSums(margin.table(alzheimer, margin = c(1,2)))
smoked <- sum(rowSums(margin.table(alzheimer, margin = c(1,2)))[-1])
### there is a discrepancy between Table 1 (32% smokers of 117 women 
### suffering from other diagnoses) and Table 4 (63% non-smokers).
### We used the data as given in Table 4.
@

\cite{SalibHillier1997} report results of a case-control study on
Alzheimer's disease and smoking behavior of 
$\Sexpr{disease["Alzheimer's"]}$
patients suffering from Alzheimer's disease and 
$\Sexpr{disease[names(disease) != "Alzheimer's"]}$
controls. The data shown in Table~\ref{alzheimertab} have been 
re-constructed from Table~4 in \cite{SalibHillier1997}. 
The authors conclude that `cigarette smoking is less frequent in 
men with Alzheimer's disease.' 

\begin{table}[h]
\begin{center}
\caption{\Robject{alzheimer} data: Smoking and Alzheimer's disease. \label{alzheimertab}}
\begin{tabular}{lrrrr} \hline \hline
 & \multicolumn{4}{c}{No. of cigarettes daily} \\
 & None & <10 & 10--20 & >20 \\ \hline
\textit{Female} & & & & \\
<<alzheimer-tab, echo = FALSE, results = tex>>=
x <- t(alzheimer[,,"Female"])
lines <- paste(paste(dimnames(x)$disease, " & "), 
               paste(apply(x, 1, function(l) paste(l, collapse = " & ")), "\\\\"))
for (i in 1:length(lines)) cat(lines[i], "\n")
@

& & & & \\
\textit{Male} & & & & \\
<<alzheimer-tab, echo = FALSE, results = tex>>=
x <- t(alzheimer[,,"Male"])
lines <- paste(paste(dimnames(x)$disease, " & "), 
               paste(apply(x, 1, function(l) paste(l, collapse = " & ")), "\\\\"))
for (i in 1:length(lines)) cat(lines[i], "\n")
@
\hline
\end{tabular}
\end{center}
\end{table}
Ignoring the ordinal structure of the smoking behavior, the null hypothesis
of independence between smoking and disease status treating gender as a
block factor with a $c_\text{quad}$-type test statistic, i.e., the 
Cochran-Mantel-Haenszel test:
<<alzheimer-mantelhaen, echo = TRUE>>=
it_alz <- independence_test(alzheimer, teststat = "quadtype")
it_alz
@
suggests that there is a clear deviation from independence. 
By default, the influence function $h$ and the transformation $g$ 
are dummy codings of the disease status $\Y$ and the smoking behavior $\X$, 
i.e., $h(\Y_i) = (1, 0, 0)^\top$ 
and $g(\X_i) = (1, 0, 0 ,0)^\top$ for a non-smoking Alzheimer patient. 
Consequently, the linear multivariate statistic $\T$ based on $g$ and $h$ 
is the contingency table of both variables 
<<alzheimer-statistic, echo = TRUE>>=
statistic(it_alz, type = "linear")
@
with conditional expectation \Rcmd{expectation(it\_alz)} and conditional
covariance \Rcmd{covariance(it\_alz)} which are available for standardizing
the contingency table $\T$. The conditional distribution is approximated by
its limiting $\chi^2$ distribution by default. 

When we investigate the association between smoking and Alzheimer's disease
separately for women and men it turns out that the deviation from independence
is due to men only
<<alzheimer-men, echo = TRUE>>=
pvalue(independence_test(as.table(alzheimer[,,"Male"]), teststat = "quadtype"))
pvalue(independence_test(as.table(alzheimer[,,"Female"]), teststat = "quadtype"))
@
and thus we focus on the male patients in the following.

The form of the deviation from independence is of special interest.
However, a $c_\text{quad}$-type test statistic is not particular useful 
for this purpose because the contributions of all cells in the contingency
table are collapsed in this quadratic form.
Instead, we define the test statistic as the maximum of the 
standardized contingency table via
<<alzheimer-max, echo = TRUE>>=
males <- as.table(alzheimer[,,"Male"])
it_alzmax <- independence_test(males, teststat = "maxtype")
it_alzmax
@
The standardized contingency table sheds some light on the deviations from independence
<<alzheimer-maxstat, echo = TRUE>>=
statistic(it_alzmax, "standardized")
@
and leads to the impression that patients suffering 
from Alzheimer's disease
smoked less cigarettes than expected under independence and, to an even larger
degree, patients with other dementias smoked much more than expected.
However, interpreting the standardized contingency table either requires
knowledge about the distribution of the standardized statistics, 
i.e., via an approximation of the $95\%$ quantile of the permutation 
null distribution which is available from
<<alzheimer-qperm, echo = TRUE>>=
qperm(it_alzmax, 0.95)
@
Alternatively and more conveniently, we can 
to switch to the $p$-value scale:
<<alzheimer-MTP, echo = TRUE>>=
pvalue(it_alzmax, method = "single-step")
@
The above results support the conclusion that the rejection of the 
null hypothesis of independence is due to a large number of heavy smokers 
with other dementias and a small number of heavy smokers suffering from 
Alzheimer's disease.

The levels of smoking arise from a underlying discrete variable and we
should make use of this information by applying a linear-by-linear
association test. A natural choice of the scores are the mid-points of
the internals used to discretize the number of cigarettes per day 
and we can set up a linear-by-linear association test with $c_\text{max}$-type 
test statistic by attaching scores to variable \Robject{smoking}:
<<alzheimer-ordered, echo = TRUE>>=
it_alzL <- independence_test(males, scores = list(smoking = c(0, 5, 15, 25)))
pvalue(it_alzL)
@
The single-step adjusted $p$-values 
<<alzheimer-orderedp, echo = TRUE, eval = FALSE>>=
pvalue(it_alzL, method = "single-step")
@
<<alzheimer-orderedp, echo = FALSE>>=
p <- pvalue(it_alzL, method = "single-step")
rownames(p) <- ""
p
@
support the conclusion that smoking is associated with both other dementia and
Alzheimer's disease.

\paragraph{Photococarcinogenicity Experiments.}

The effect on tumor frequency and latency in photococarcinogenicity
experiments, where carcinogenic doses of ultraviolet radiation (UVR) are
administered, are measured by means of (at least) three response variables:
the survival time, the time to first tumor and the total number of tumors of
animals in different treatment groups. 
The main interest is testing the global null of no treatment 
effect with respect to survival time, time to first tumor or
number of tumors \citep[][analyze the detection time
of tumors in addition, this data is not given here]{Molefeetal2005}. 
In case the  global null hypothesis can be rejected, the deviations 
from the partial hypotheses are of special interest.

\cite{Molefeetal2005} report data of an experiment where
$\Sexpr{nrow(photocar)}$ animals were exposed to different levels 
of UVR exposure (group A: topical vehicle and 600 Robertson--Berger units 
of UVR, group B: no topical vehicle and 600 Robertson--Berger units of UVR and group C: 
no topical vehicle and 1200 Robertson--Berger units of UVR). 
The data are taken from Tables~1 to 3 in \cite{Molefeetal2005}, where a 
parametric test procedure is proposed. Figure
\ref{photocarfig} depicts the group effects for all three response
variables. 


\begin{sidewaysfigure}
\begin{center}
<<photocar-plot, echo = FALSE, fig = TRUE, width = 7, height = 3>>=
par(cex.lab = 1.3, cex.axis = 1.3)
layout(matrix(1:3, ncol = 3))
plot(survfit(Surv(time, event) ~ group, data = photocar), xmax = 50,
     xlab = "Survival Time (in weeks)", ylab = "Probability",
     lty = 1:3)
     legend("bottomleft", lty = 1:3, levels(photocar$group), bty = "n")
plot(survfit(Surv(dmin, tumor) ~ group, data = photocar), xmax = 50,
     xlab = "Time to First Tumor (in weeks)", ylab = "Probability",
     lty = 1:3)
     legend("bottomleft", lty = 1:3, levels(photocar$group), bty = "n")
boxplot(ntumor ~ group, data = photocar, 
        ylab = "Number of Tumors", xlab = "Treatment Group")
@
\caption{\Robject{photocar} data: 
         Kaplan-Meier estimates of time to death and time to first tumor as
         well as boxplots of the total number of tumors in three treatment
         groups. \label{photocarfig}}
\end{center}
\end{sidewaysfigure}
First, we construct a global test for the null hypothesis of independence
of treatment and \textit{all} three response variables. A
$c_\text{max}$-type test based on the standardized multivariate          
linear statistic and an approximation of the conditional distribution
utilizing the asymptotic distribution simply reads
<<photocar-global, echo = TRUE>>=
it_ph <- independence_test(Surv(time, event) + Surv(dmin, tumor) + ntumor ~ group,
                           data = photocar)
it_ph 
@
Here, the influence function $h$ consists of the logrank scores of the survival
time and time to first tumor as well as the number of tumors, i.e., for the 
first animal in the first group $h(\Y_1) =
\Sexpr{paste("(", paste(round(it_ph@statistic@ytrans[1,], 2), collapse = ","), ")")}^\top$
and $g(\X_1) = (1, 0, 0)^\top$. The multivariate statistic is the sum of each of
the three elements of the influence function $h$ in each of the groups,
i.e.,
<<photocar-linear, echo = TRUE>>=
statistic(it_ph, type = "linear")
@
It is important to note that this global test utilizes the complete
covariance structure $\Sigma$
when $p$-values are computed via quasi-randomized Monte-Carlo
procedures in the multivariate setting \citep{numerical-:1992}.
Alternatively, a test statistic based on the quadratic form $c_\text{quad}$
directly incorporates the covariance matrix and leads to a very similar 
$p$-value. 

The deviations from the partial null hypotheses, i.e., independence of
each single response and treatment groups, can be inspected by the standardized
linear statistic $\T$
<<photocar-stand, echo = TRUE>>=
statistic(it_ph, type = "standardized")
@
or by means of adjusted $p$-values
<<photocar-stand, echo = TRUE, eval = FALSE>>=
pvalue(it_ph, method = "single-step")
@
<<photocar-stand, echo = FALSE>>=
round(pvalue(it_ph, method = "single-step"), 5)
@
Of course, the goodness of the asymptotic procedure can be checked against
the Monte-Carlo approximation which is computed by
<<photocar-MC, echo = TRUE>>=
it <- independence_test(Surv(time, event) + Surv(dmin, tumor) + ntumor ~ group,
                  data = photocar, distribution = approximate(50000))
pvalue(it, method = "single-step")
@
The more powerful step-down adjusted $p$-values 
\citep[Algorithm 2.8 in][]{WestfallYoung1993} are 
<<photocar-MC2, echo = TRUE>>=    
pvalue(it, method = "step-down")
@
Clearly, the rejection of the global null hypothesis is due to the
group differences in both survival time and time to first tumor whereas 
no treatment effect on the total number of tumors can be observed.

\paragraph{Contaminated Fish Consumption.}

In the former three applications, standard transformations for $g$ and $h$
such as dummy codings, ranks and logrank scores have been applied. In the third 
application, we will show how one can utilize the Lego system 
to implement a newly invented test procedure. 

\cite{Rosenbaum1994a} proposed to compare groups by means of a
\textit{coherence criterion} and studied a dataset of subjects 
who ate contaminated fish for more than three years in
the `exposed' group and a control group. Three response variables are
available: the mercury level of the blood, the percentage of cells with
structural abnormalities and the proportion of cells with asymmetrical or
incomplete-symmetrical chromosome aberrations (see Figure \ref{mercurybox}). 
The observations are partially
ordered: an observation is said to be smaller than another when all three variables
are smaller. The rank score for observation $i$ is the number of
observations that are larger (following the above criterion) 
than observation $i$ minus the number of
observations that are smaller. The
distribution of the rank scores in both groups is to be compared and
the corresponding test is called `POSET-test' (partially ordered
sets test) and may be viewed as a multivariate form of the
Wilcoxon-Mann-Whitney test.

\begin{sidewaysfigure}
\begin{center}
<<mercuryfish-plot, echo = FALSE, fig = TRUE, width = 7, height = 3>>=
par(cex.lab = 1.3, cex.axis = 1.3)
layout(matrix(1:3, ncol = 3))
boxplot(I(log(mercury)) ~ group, data = mercuryfish, 
        ylab = "Mercury Blood Level (log scale)")
boxplot(abnormal ~ group, data = mercuryfish, 
        ylab = "Abnormal Cells (in %)")
boxplot(ccells ~ group, data = mercuryfish, 
        ylab = "Chromosome Aberrations (in %)")
@
\caption{\Robject{mercuryfish} data: 
         Distribution of all three response variables in the exposed group
         and control group. \label{mercurybox}}
\end{center}
\end{sidewaysfigure}
The coherence criterion can be formulated in a simple function
<<mercurysfish-score, echo = TRUE>>=
coherence <- function(data) {
    x <- t(as.matrix(data))
    matrix(apply(x, 2, function(y)
           sum(colSums(x < y) == nrow(x)) - 
           sum(colSums(x > y) == nrow(x))), ncol = 1)
}
@
which is now defined as influence function $h$ via the \Rcmd{ytrafo} argument
<<mercuryfish-poset, echo = TRUE>>=
poset <- independence_test(mercury + abnormal + ccells ~ group, 
    data = mercuryfish, ytrafo = coherence, distribution = exact())
@
Once the transformations $g$ (a zero-one coding of the exposed and control
group) and $h$ (the coherence criterion) are defined, we enjoy the whole
functionality of the framework, including an exact two-sided $p$-value
<<mercuryfish-pvalue, echo = TRUE>>=
pvalue(poset)
@
and density (\Rcmd{dperm}), distribution (\Rcmd{pperm}) and quantile functions 
(\Rcmd{qperm}) of the conditional distribution. When only a small number of
observations is available, it might be interesting to compare the exact
conditional distribution and its approximation via the limiting distribution.
For the \Robject{mercuryfish} data, the relevant parts of 
both distribution functions are shown in Figure~\ref{distplot}. It 
turns out that using the normal approximation would be sufficient for all practical
purposes in this application.

\begin{sidewaysfigure}
\begin{center}
<<mercuryfish-ppermplot, echo = FALSE, fig = TRUE, height = 5, width = 9>>=
par(cex.lab = 1.3, cex.axis = 1.1)
ite <- poset
ita <- independence_test(mercury + abnormal + ccells ~ group, data =     
                           mercuryfish, ytrafo = coherence)
site <- support(ite)
layout(matrix(1:2, ncol = 2))
site <- site[site <= qperm(ite, 0.1) & site > -3]
pite <- sapply(site, function(x) pperm(ite, x))
pita <- sapply(site, function(x) pperm(ita, x))

plot(site, pite, type = "S", ylab = "Probability", xlab = "Standardized Statistic")
lines(site, pita, lty = 3)
legend("topleft", lty = c(1,3), legend = c("Conditional Distribution",
"Approximation"), bty = "n")

site <- support(ite)
site <- site[site >= qperm(ite, 0.9) & site < 3]
pite <- sapply(site, function(x) pperm(ite, x))
pita <- sapply(site, function(x) pperm(ita, x))

plot(site, pite, type = "S", ylab = "Probability", xlab = "Standardized Statistic")
lines(site, pita, lty = 3)
@
\caption{\Robject{mercuryfish} data: 
         Conditional distribution and asymptotic normal approximation 
         for the POSET test. \label{distplot}}
\end{center}
\end{sidewaysfigure}

\section{Discussion}

Conditioning on the observed data is a simple, yet powerful, design
principle for statistical tests. Conceptually, one only needs to choose
an appropriate test statistic and evaluate it for all admissible 
permutations of the data \citep[][gives some examples]{Ernst2004}. 
In practical set ups, an implementation of this
two-step procedure requires a certain amount of programming 
and computing time. Sometimes, permutation tests are even regarded 
as being `computationally impractical'
for larger sample sizes \citep{BalkinMallows2001}. 

The permutation test framework by \cite{StrasserWeber1999} helps us to take
a fresh look at conditional inference procedures and makes at least 
two important contributions: analytic formulae for the 
conditional expectation and covariance and the limiting normal distribution
of a class of multivariate linear statistics. Thus, test statistics can be
defined for appropriately standardized linear statistics and a fast
approximation of the conditional distribution is available, 
especially for large sample sizes. 

It is one mission, if not \textit{the} mission, of statistical computing to
transform new theoretical developments into flexible software tools for the
data analyst. The \Rpackage{coin} package is an attempt to translate 
the theoretical concepts of \cite{StrasserWeber1999} into software tools 
as closely as possible preserving the simplicity and flexibility of 
the theory. With this package, the rather inflexible spanners
currently in use,
such as \Rcmd{wilcox.test} for the Wilcoxon-Mann-Whitney test or
\Rcmd{mantelhaen.test} for the Cochran-Mantel-Haenszel $\chi^2$ test in
\S{} languages and \texttt{NPAR1WAY} for linear rank statistics in \textsf{SAS}
\citep[see the Tables in][for
an overview on procedures implemented in \textsf{StatXact}, \textsf{LogXact},
\textsf{Stata}, \textsf{SAS} and \textsf{Testimate}]{Oster2002,Oster2003}, 
are extended by \Rcmd{independence\_test}, a much more flexible and adjustable spanner.

But who stands to benefit from such a software infrastructure? We argue 
that an improved data analysis is possible in cases when the appropriate 
conditional test is not available from standard software packages.
Statisticians can modify existing test procedures or even try new ideas by
computing directly on the theory. A high-level Lego system is attractive for
both researchers and software developers, because only the transformation $g$ and influence
function $h$ need to be newly implemented, but the burden of implementing a
Monte-Carlo procedure, or even thinking about asymptotics, 
is waived. 

%%Since the \Rpackage{coin} package consists
%%of only a few core functions that need to be tested, the setup of quality
%%assurance tools is rather simple in this case \citep[the need for such tests
%%is obvious,[]{different-:2000}. Many text books
%%\citep[e.g.][]{HollanderWolfe1999} or software manuals \citep[first of all
%%the excellent StatXact handbook by][]{StatXact6} include examples and results
%%of the associated test procedures which have been reproduced with
%%\Rpackage{coin}. 
%%Since the \Rpackage{coin} package is part of the Comprehensive \RR{} Archive
%%Network (CRAN, \url{http://CRAN.R-project.org}) we have been able to help
%%several people asking `Is the xyz-test available in \RR{}' on the
%%\texttt{r-help} email list with the answer `No, but its only whose 
%%two lines of \RR{} code'. 

With a unifying conceptual framework in mind and a software implementation, such as
\Rpackage{coin}, at hand, we are no longer limited to already published and 
implemented permutation test procedures and are free to define our own transformations and
influence functions, can choose several forms of suitable test statistics and
utilize several methods for the computation or approximation of 
the conditional distribution of the test statistic of interest. Thus, the
construction of an appropriate permutation test, for both classical 
new inference problems, is only a matter of putting together
adequate Lego bricks.

\bibliographystyle{asa}
\bibliography{LegoCondInf}

\setkeys{Gin}{width=0.9\textheight}
\pagestyle{empty}

\end{document}
