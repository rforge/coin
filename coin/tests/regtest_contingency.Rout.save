
R : Copyright 2004, The R Foundation for Statistical Computing
Version 2.0.1  (2004-11-15), ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for a HTML browser interface to help.
Type 'q()' to quit R.

> 
> ### Regression tests for the r x c x K problem, i.e.,
> ### testing the independence of a factor
> ### `y' and a factor factor `x' (possibly blocked)
> 
> set.seed(290875)
> library(ConditionalInference)
Loading required package: survival 
Loading required package: splines 
Loading required package: mvtnorm 
> 
> ### generate data: 2 x 2 x K
> dat <- data.frame(x = gl(2, 50), y = gl(2, 50)[sample(1:100)], 
+                   block = gl(10, 10)[sample(1:100)])[sample(1:100, 75),]
> 
> ### Pearsons Chisq Test, asymptotic distribution
> ptwo <- chisq.test(table(dat$x, dat$y), correct = FALSE)$p.value
> 
> stopifnot(isequal(pvalue(chisq_test(y ~ x, data = dat)), ptwo))
> stopifnot(isequal(pvalue(chisq_test(table(dat$y, dat$x))), ptwo))
> 
> ### Cochran-Mantel-Haenzel Test, asymptotic distribution
> ptwo <- drop(mantelhaen.test(table(dat$x, dat$y, dat$block), 
+                              correct = FALSE)$p.value)
> 
> stopifnot(isequal(pvalue(cmh_test(y ~ x | block, data = dat)), ptwo))
> stopifnot(isequal(pvalue(cmh_test(table(dat$y, dat$x, dat$block))), ptwo))
> 
> 
> ### generate data: r x c x K
> dat <- data.frame(x = gl(4, 25), y = gl(4, 25)[sample(1:100)], 
+                   block = gl(2, 50)[sample(1:100)])
> 
> ### Cochran-Mantel-Haenzel Test, asymptotic distribution
> ### _is wrong_ in R < 2.1.0!!!
> ptwo <- drop(mantelhaen.test(table(dat$y, dat$x, dat$block), 
+                              correct = FALSE)$p.value)
> 
> (isequal(pvalue(cmh_test(y ~ x | block, data = dat)), ptwo))
[1] 0.478342724
[1] 0.4814367803
[1] FALSE
> (isequal(pvalue(cmh_test(table(dat$y, dat$x, dat$block))), ptwo))
[1] 0.478342724
[1] 0.4814367803
[1] FALSE
> 
> ### generate data: r x c x K
> dat <- data.frame(x = gl(4, 25), y = gl(5, 20)[sample(1:100)], 
+                   block = gl(2, 50)[sample(1:100)])
> 
> ### Cochran-Mantel-Haenzel Test, asymptotic distribution
> ### _is wrong_!!!
> ptwo <- drop(mantelhaen.test(table(dat$y, dat$x, dat$block),
+                              correct = FALSE)$p.value)
> 
> (isequal(pvalue(cmh_test(y ~ x | block, data = dat)), ptwo))
[1] 0.04809724998
[1] 2.713093853e-07
[1] FALSE
> (isequal(pvalue(cmh_test(table(dat$y, dat$x, dat$block))), ptwo))
[1] 0.04809724998
[1] 2.713093853e-07
[1] FALSE
> 
> ### Job Satisfaction, Agresti, 2002, Table 7.8, page 288
> data(jobsatisfaction)
> 
> # both unordered, results in Agresti, 2002, Table 7.12, 3rd row.
> stopifnot(isequal(round(pvalue(cmh_test(jobsatisfaction)), 4), 0.3345))
> 
> # linear-by-linear association tests
> df <- table2df(jobsatisfaction)
> df$Income <- ordered(df$Income)
> cmh_test(Job.Satisfaction ~ Income | Gender, data = df)

	Asymptotical Generalised Cochran-Mantel-Haenszel Test

data:  Job.Satisfaction by groups <5000 < 5000-15000 < 15000-25000 < >25000 stratified by Gender 
T = 6.961, df = 3, p-value = 0.07315

> 
> df$Job.Satisfaction <- ordered(df$Job.Satisfaction)
> 
> attr(df$Income, "scores") <- c(3, 10, 20, 35)
> attr(df$Job.Satisfaction, "scores") <- c(1, 3, 4, 5)
> cmh_test(Job.Satisfaction ~ Income | Gender, data = df)

	Asymptotical Generalised Cochran-Mantel-Haenszel Test

data:  Job.Satisfaction (ordered) by groups <5000 < 5000-15000 < 15000-25000 < >25000 stratified by Gender 
T = 5.5534, df = 1, p-value = 0.01844

> 
> cmh_test(Job.Satisfaction ~ Income | Gender, data = df, 
+          yscores = c(2500, 10000, 20000, 30000))

	Asymptotical Generalised Cochran-Mantel-Haenszel Test

data:  Job.Satisfaction (ordered) by groups <5000 < 5000-15000 < 15000-25000 < >25000 stratified by Gender 
T = 6.4178, df = 1, p-value = 0.01130

> lbl_test(Job.Satisfaction ~ Income | Gender, data = df, 
+          yscores = c(2500, 10000, 20000, 30000))

	Asymptotical Linear-by-Linear Association Test

data:  Job.Satisfaction (ordered) by groups <5000 < 5000-15000 < 15000-25000 < >25000 stratified by Gender 
T = 6.4178, df = 1, p-value = 0.01130

> 
> ### congenital sex organ malformation, StatXact 6 manual, page 793
> csom <- as.table(matrix(c(17066, 48, 14464, 38, 788, 5, 126, 1, 37, 1), nrow = 2,
+     dimnames = list(Malformation = c("Absent", "Present"),
+                     Alcohol = c("0", "<1", "1-2", "3-5", ">=6"))))
> 
> p <- pvalue(lbl_test(csom))
> ### asymptotic p-value Cochran-Armitage test (page 796)
> stopifnot(isequal(round(p, 4), 0.1764))
> stopifnot(isequal(round(pvalue(lbl_test(csom)), 4),
+                   round(prop.trend.test(csom[2,], colSums(csom))$p.value, 4)))
> 
> ### asympototic p-value permutation test with scores (page 807)
> p <- pvalue(lbl_test(csom, yscores = c(0, 0.5, 1.5, 4, 7)))
> stopifnot(isequal(round(p, 4), 0.0104))
> stopifnot(isequal(round(pvalue(lbl_test(csom, 
+                                yscores = c(0, 0.5, 1.5, 4, 7))), 4),
+                   round(prop.trend.test(csom[2,], colSums(csom),
+                         score = c(0, 0.5, 1.5, 4, 7))$p.value, 4)))
> 
> ### case-control study on oral contraceptives and smoking / myocardial
> ### infact, StatXact 6 manual, page 797
> data(oral_contraceptives)
> 
> ### standardized test statistic, page 799
> stopifnot(isequal(round(sqrt(statistic(lbl_test(oral_contraceptives))), 3), 
+           4.335))
> 
